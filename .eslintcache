[{"/home/meetshah/Desktop/E-learning/E-Learning-platform/src/index.js":"1","/home/meetshah/Desktop/E-learning/E-Learning-platform/src/App.js":"2","/home/meetshah/Desktop/E-learning/E-Learning-platform/src/reportWebVitals.js":"3","/home/meetshah/Desktop/E-learning/E-Learning-platform/src/component/form.js":"4","/home/meetshah/Desktop/E-learning/E-Learning-platform/src/component/Navbar.js":"5","/home/meetshah/Desktop/E-learning/E-Learning-platform/src/component/Description.js":"6","/home/meetshah/Desktop/E-learning/E-Learning-platform/src/component/Frontend.js":"7","/home/meetshah/Desktop/E-learning/E-Learning-platform/src/component/Registration.js":"8","/home/meetshah/Desktop/E-learning/E-Learning-platform/src/component/CourseData.js":"9","/home/meetshah/Desktop/E-learning/E-Learning-platform/src/container/login/Login.js":"10","/home/meetshah/Desktop/E-learning/E-Learning-platform/src/container/signup/signup.js":"11","/home/meetshah/Desktop/E-learning/E-Learning-platform/src/container/forgot_password/Forgot_password.js":"12","/home/meetshah/Desktop/E-learning/E-Learning-platform/src/contexts/AuthContext.js":"13","/home/meetshah/Desktop/E-learning/E-Learning-platform/src/firebase.js":"14","/home/meetshah/Desktop/E-learning/E-Learning-platform/src/component/dashboard/Dashboard.js":"15","/home/meetshah/Desktop/E-learning/E-Learning-platform/src/container/PrivateRoutes.js":"16","/home/meetshah/Desktop/E-learning/E-Learning-platform/src/component/Update_Profile/UpdateProfile.js":"17","/home/meetshah/Desktop/E-learning/E-Learning-platform/src/component/Workshop/WorkshopList.js":"18"},{"size":685,"mtime":1614667645627,"results":"19","hashOfConfig":"20"},{"size":2026,"mtime":1614749966451,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1614585180253,"results":"22","hashOfConfig":"20"},{"size":2202,"mtime":1614585180249,"results":"23","hashOfConfig":"20"},{"size":2338,"mtime":1614759686503,"results":"24","hashOfConfig":"20"},{"size":857,"mtime":1614603374410,"results":"25","hashOfConfig":"20"},{"size":271,"mtime":1614585180249,"results":"26","hashOfConfig":"20"},{"size":4039,"mtime":1614585180249,"results":"27","hashOfConfig":"20"},{"size":12706,"mtime":1614691286903,"results":"28","hashOfConfig":"20"},{"size":2707,"mtime":1614677413388,"results":"29","hashOfConfig":"20"},{"size":4773,"mtime":1614753544091,"results":"30","hashOfConfig":"20"},{"size":2004,"mtime":1614690648779,"results":"31","hashOfConfig":"20"},{"size":2330,"mtime":1614690578270,"results":"32","hashOfConfig":"20"},{"size":638,"mtime":1614585180253,"results":"33","hashOfConfig":"20"},{"size":956,"mtime":1614690739933,"results":"34","hashOfConfig":"20"},{"size":548,"mtime":1614684845419,"results":"35","hashOfConfig":"20"},{"size":3628,"mtime":1614686404576,"results":"36","hashOfConfig":"20"},{"size":3849,"mtime":1614773872376,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"qj4z6a",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/meetshah/Desktop/E-learning/E-Learning-platform/src/index.js",[],["82","83"],"/home/meetshah/Desktop/E-learning/E-Learning-platform/src/App.js",["84"],"/home/meetshah/Desktop/E-learning/E-Learning-platform/src/reportWebVitals.js",[],"/home/meetshah/Desktop/E-learning/E-Learning-platform/src/component/form.js",[],["85","86"],"/home/meetshah/Desktop/E-learning/E-Learning-platform/src/component/Navbar.js",["87","88"],"/home/meetshah/Desktop/E-learning/E-Learning-platform/src/component/Description.js",["89"],"import React from \"react\";\n\nfunction Description(props) {\n  console.log(props.location.state);\n  const data = props.location.state.data;\n  return (\n    <div className=\"description_container\">\n      <div className=\"first-container\">\n        <div className=\"course_title\">{data.courseName}<br/>\n        <div className=\"course_description\">\n            {data.courseDesc}.....\n        </div>\n        <div className=\"category\">\n            {data.category}\n        </div>\n        </div>\n        <div className=\"course_img\">\n          <img src={data.courseImg} />\n        </div>\n      </div>\n      <div className=\"courseDes_price\">\n        <div className=\"courseDes\">{data.courseDesc}</div>\n        <div className=\"courseprice\">{data.price}</div>\n      </div>\n      <div className=\"course_author\">{data.author}</div>\n    </div>\n  );\n}\n\nexport default Description;\n","/home/meetshah/Desktop/E-learning/E-Learning-platform/src/component/Frontend.js",["90","91"],"import React from 'react';\nimport LoadData from \"./CourseData\";\nimport filterStack from \"./CourseData\";\nimport CourseData from \"./CourseData\"\nfunction Frontend(props) {\n    return (\n        <div>\n            <CourseData/>\n        </div>\n    );\n}\n\nexport default Frontend;","/home/meetshah/Desktop/E-learning/E-Learning-platform/src/component/Registration.js",[],"/home/meetshah/Desktop/E-learning/E-Learning-platform/src/component/CourseData.js",["92","93","94","95","96","97","98","99"],"import React, { useEffect, useState } from \"react\";\nimport Navbar from \"./Navbar\"\nimport data from \"../data.json\";\nimport \"../css/course-container.css\"\nimport { Link, Redirect } from \"react-router-dom\";\nimport Description from \"./Description\";\nconst CourseData = (props) => {\n  const [searchText, setSearchText] = useState(\"\");\n  const [mainDataSource, setMaindataSource] = useState(data); /*do not change*/\n  const [dataSource, setDataSource] = useState(data);\n  const [sortBy,setSortBy] = useState(\"\")\n  const [filtertBy,setFiltertBy] = useState(\"\")\n  const [offSet,setOffSet] = useState(9)\n  const [status,setStatus] =useState(\"Loading....\")\n  const [price,setPrice] = useState([])\n  const [newComp,setNewComp] = useState(false)\n  const [redirectData,setRedirectData] = useState(null)\n  \n\n  const [finalPrice,setFinalPrice] = useState(0)\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  const handleScroll = (event) => {\n    const scrollTop =\n      (document.documentElement && document.documentElement.scrollTop) ||\n      document.body.scrollTop;\n    const scrollHeight =\n      (document.documentElement && document.documentElement.scrollHeight) ||\n      document.body.scrollHeight;\n      // console.log(event.currentTarget)\n      // console.log(\"stop\",scrollTop)\n      // console.log(\"sheight\",scrollHeight)\n      // console.log(\"clientheight\",window.innerHeight)\n\n    if (scrollTop + window.innerHeight + 10 >= scrollHeight) {\n      // console.log(\"inside\")\n      setStatus(\"\")\n      return setOffSet(prev => prev + 7)\n    }\n  };\n  // console.log(searchText);\n  // useEffect((data) => {}, []);\n  // useEffect((searchText)=>{\n  //     let filteredData = data.filter((x)=>{\n  //         return x.courseName.includes(searchText)\n  //     })\n  //     return filteredData;\n\n  // },[searchText])\n\n  // useEffect(\n  //   (data) => {\n  //     data.forEach((data) => {\n  //       setcourseId((courseId) => courseId.concat(data.courseId));\n  //       setcourseName((courseName) => courseName.concat(data.courseName));\n  //       setcourseDesc((courseDesc) => courseDesc.concat(data.courseDesc));\n  //       setpreReq((preReq) => preReq.concat(data.preReq));\n  //       setauthor((author) => author.concat(data.author));\n  //       setcategory((category) => category.concat(data.category));\n  //       setstatus((status) => status.concat(data.status));\n  //       setreg_student((reg_student) => reg_student.concat(data.reg_student));\n  //       setcourseImg((courseImg) => courseImg.concat(data.courseImg));\n  //       setjoiningDate((joiningDate) => joiningDate.concat(data.joiningDate));\n  //       setcoursePrice((coursePrice) => coursePrice.concat(data.price));\n  //     });\n  //     console.log(\n  //       courseId,\n  //       courseName,\n  //       courseDesc,\n  //       preReq,\n  //       author,\n  //       category,\n  //       status,\n  //       reg_student,\n  //       courseImg,\n  //       joiningDate,\n  //       coursePrice\n  //     );\n  //   },\n  //   [\n  //     author,\n  //     category,\n  //     courseDesc,\n  //     courseId,\n  //     courseImg,\n  //     courseName,\n  //     coursePrice,\n  //     joiningDate,\n  //     preReq,\n  //     reg_student,\n  //     status,\n  //   ]\n  // );\n\n  const filterName = (value) => {\n    if (value < 1) {\n      setSearchText(\"\");\n      return setDataSource(mainDataSource);\n    } else {\n      setSearchText(value.toLowerCase());\n      let filteredData = mainDataSource.filter((x) => {\n        let lowerString_coursename = x.courseName.toLowerCase();\n        let lowerString_category = x.category.toLowerCase();\n\n        return (\n          lowerString_coursename.includes(searchText) ||\n          lowerString_category.includes(searchText)\n        );\n      });\n\n      console.log(filteredData.length);\n      console.log(filteredData);\n      return setDataSource(filteredData);\n    }\n  };\n  const courseDescription = (e, coursename, courseid) => {\n    // e.preventDefault()\n    window.open(`http://localhost:3000/desc/${coursename}`, \"_blank\");\n    console.log(e);\n    console.log(courseid);\n\n    console.log(\"value\", e.target.value);\n\n    return console.log(e.target);\n  };\n\n  \n const filterStack = (value) => {\n    let filterStack_data = mainDataSource.filter((x) => {\n      return x.category === value;\n    });\n\n    if (filterStack_data.length < 0) {\n      setDataSource(mainDataSource);\n    } else {\n      setSortBy(\"\")\n      setFiltertBy(value)\n      return setDataSource(filterStack_data);\n    }\n  };\n  \n  const handleClick =(e,course_price,index) =>{\n    console.log(e)\n    console.log(course_price)\n    console.log(price)\n    if(finalPrice < 50000){\n      setPrice([...price,course_price])\n      let sum = price.reduce((a, b) =>{\n        return a + b;\n      }, 0);\n    setFinalPrice(sum)\n    }\n    else{\n      alert(\"Limit Reached\")\n    }\n    console.log(price)\n    console.log(index)\n    console.log(dataSource[index].courseDesc)\n    // setDataSource(dataSource.slice(index,1))\n    // price.reduce(sum)\n    \n\n  }\n  const getCourseDesc = (e,data) =>{\n    e.preventDefault()\n    console.log(e);\n    console.log(data);\n    setRedirectData(data)\n    return true\n  }\n  const LoadData = (props) => {\n    // console.log(\"in load data\");\n    // console.log(props.data);\n    console.log(props.data.length)\n    return (    \n    // <InfiniteScroll \n    // dataLength={props.data.length}\n    // hasMore={true}\n    // loader={<h4>Loading...</h4>}\n    // endMessage={\n    //   <p style={{ textAlign: 'center' }}>\n    //     <b>Yay! You have seen it all</b>\n    //   </p>\n    // }\n    // >\n    // {\n      \n    props.data.map((data, i) => \n      \n    (\n      \n      <div\n        onClick={(e)=> {getCourseDesc(e,data)}}\n        className=\"course-container\"\n        // onClick={(e) => {\n        //   courseDescription(e, data.courseName, data.courseId);\n        // }}\n      > \n        <div className=\"course_data\" value={data.courseId}>\n          <img alt=\"course-img\" src={data.courseImg} value={data.courseId} />\n          <div className=\"courseName\" value={data.courseId}>\n            {data.courseName}\n          </div>\n          <div className=\"price_data\" value={data.courseId}>\n           \n            <img\n              alt=\"price\"\n              className=\"price_tag\"\n              src=\"../img/price.png\"\n              value={data.courseId}\n            />\n            &nbsp;\n            <div className=\"price\" value={data.courseId}>    \n              {data.price}/-\n            </div>\n          </div>\n          <button className=\"price_btn\" onClick={(e)=>handleClick(e,data.price,i)} >\n            Add to Cart\n          </button>\n        </div>\n      </div>\n      \n    ))\n      // }</InfiniteScroll>\n    )\n  };              \n  const getSorted_list = () => {\n    let sorted_Course = [];\n    dataSource.forEach((data) => {\n      sorted_Course.push({\n        courseId: data.courseId,\n        courseName: data.courseName,\n        courseDesc: data.courseDesc,\n        preReq: data.preReq,\n        author: data.author,\n        category: data.category,\n        status: data.status,\n        reg_student: data.reg_student,\n        courseImg: data.courseImg,\n        joiningDate: data.joiningDate,\n        price: data.price,\n      });\n    });\n    return sorted_Course;\n  };\n  const sortCourse = (value) => {\n    let sorted_Course = [];\n    if (value === \"recent\") {\n    } else if (value === \"asce\") {\n      sorted_Course = [...getSorted_list()];\n      console.log(sorted_Course);\n      setSortBy(\"Title A to Z\")\n      sorted_Course.sort((a, b) => {\n        if (a.courseName.toLowerCase() < b.courseName.toLowerCase()) return -1;\n\n        console.log(a, b);\n        if (a.courseName.toLowerCase() > b.courseName.toLowerCase()) return 1;\n\n        return 0;\n      });\n      console.log(sorted_Course);\n      setDataSource(sorted_Course);\n    } else if (value === \"desc\") {\n      sorted_Course = [...getSorted_list()];\n      console.log(sorted_Course);\n      setSortBy(\"Title Z to A\")\n\n      sorted_Course.sort((a, b) => {\n        if (a.courseName.toLowerCase() > b.courseName.toLowerCase()) return -1;\n\n        console.log(a, b);\n        if (a.courseName.toLowerCase() < b.courseName.toLowerCase()) return 1;\n\n        return 0;\n      });\n      console.log(sorted_Course);\n      setDataSource(sorted_Course);\n    } else if (value === \"price_l_h\") {\n      sorted_Course = [...getSorted_list()];\n      sorted_Course.sort((a, b) => a.price - b.price);\n      setDataSource(sorted_Course);\n      setSortBy(\"Price: Low to High\")\n\n      console.log(sorted_Course);\n    } else if (value === \"price_h_l\") {\n      sorted_Course = [...getSorted_list()];\n      sorted_Course.sort((a, b) => b.price - a.price);\n      console.log(sorted_Course);\n      setDataSource(sorted_Course);\n      setSortBy(\"Price: High to Low\")\n\n    }\n    return console.log(\"sorting done\");\n  };\n  const resetData = () => {\n    setSearchText(\"\");\n    setSortBy(\"\")\n    setFiltertBy(\"\")\n    setOffSet(9)\n    setPrice([])\n    setFinalPrice(0)\n\n    setStatus(\"Loading...\")\n    return setDataSource(mainDataSource);\n  };\n  // const checkAndUpdate = (e,value) =>{\n  //   if(e.keyCode===8){\n  //     if(value<1){\n  //       setDataSource(mainDataSource)\n  //     }\n  //     alert(\"backspace\")\n\n  //   } else{\n  //     filterName(value)\n  //   }\n  // }\n  // const handleScroll = (event) =>{\n  //   const {scrollTop, clientHeight, scrollHeight,} = event.currentTarget;\n  //   console.log(\"stop\",scrollTop)\n  //   console.log(\"client\",clientHeight)\n  //   console.log(\"sheight\",scrollHeight)\n\n  // }\n  return (\n    <div>\n    { redirectData ? <Redirect to={{\n            pathname: `/Course_Description/${redirectData.courseId}`,\n            state: { data: redirectData }\n        }}/> : null}\n      <div className=\"container\">\n        <div className=\"nav-container\">\n          <div className=\"sort\">\n            <div className=\"dropdown\">\n              Sort by :{sortBy}\n              <div\n                className=\"dropdown-content\"\n                onClick={(e) => {\n                  sortCourse(e.target.value);\n                }}\n              >\n                <button value=\"recent\">Recently Enrolled</button>\n                <button value=\"asce\">Title: A to Z</button>\n                <button value=\"desc\">Title: Z to A</button>\n                <button value=\"price_l_h\">Price: Low to High</button>\n                <button value=\"price_h_l\">Price: Hight to Low</button>\n              </div>\n            </div>\n          </div>\n          <div className=\"filter\">\n            <div className=\"dropdown\">\n              Filter by: {filtertBy}\n              <div\n                className=\"dropdown-content\"\n                onClick={(e) => {\n                  filterStack(e.target.value);\n                }}\n              >\n                <button value=\"frontend\">Frontend</button>\n                <button value=\"backend\">Backend</button>\n                <button value=\"fullstack\">Fullstack</button>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"filter\">\n              Total Price: {finalPrice}\n          </div>\n          <div\n            className=\"reset\"\n            onClick={() => {\n              resetData();\n            }}\n          >\n            <img\n              alt=\"reset_filter\"\n              src=\"../img/refresh.png\"\n              title=\"Reset Filters\"\n            />\n          </div>\n          <div style={{backgroundColor:\"transparent\"}}>\n            <input\n              className=\"search_course\"\n              value={searchText}\n              required\n              name=\"\"\n              type=\"text\"\n              placeholder=\"Search Course Here\"\n              onChange={(e) => filterName(e.target.value)}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"course-list\" onScroll={handleScroll}>\n        {/* {data.map((data, i) => (\n          <div className=\"course-container\">\n            <div className=\"course_data\">\n                <img alt=\"course-img\" src={data.courseImg} />\n              <div className=\"courseName\">{data.courseName}</div>\n              <div className=\"price_data\">\n                <img alt=\"price\" className=\"price_tag\" src=\"../img/price.png\" />\n                &nbsp;\n                <div className=\"price\">{data.price}/-</div>\n              </div>\n              <button className=\"price_btn\">Add to Cart</button>\n            </div>\n          </div>\n        ))} */}\n        <LoadData data={dataSource.slice(0,offSet)} />\n        {/* <div style={{color:\"white\"}}>\n        {status}\n        </div> */}\n\n        {/* {LoadData(data)} */}\n      </div>\n    </div>\n  );\n};\n\nexport default CourseData;\n","/home/meetshah/Desktop/E-learning/E-Learning-platform/src/container/login/Login.js",["100"],"import React, { useRef, useState } from \"react\";\n\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/AuthContext\";\n\nfunction Login(props) {\n  const [alertCss, setAlertCss] = useState(\"danger\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const { login } = useAuth();\n  const history = useHistory();\n  async function handleSubmit(e) {\n    e.preventDefault();\n    try {\n      setError(\"\");\n      setLoading(true);\n      await login(emailRef.current.value, passwordRef.current.value);\n      history.push(\"/Dashboard\");\n    } catch {\n      setError(\"Failed to Login\");\n    }\n    setLoading(false);\n  }\n  return (\n    <div className=\"Signup\">\n      <div className=\"title\">\n        <h2>\n          <strong>Log In to your E-Learning Account</strong>\n        </h2>\n        <hr className=\"line\" />\n      </div>\n      {error && <div className={alertCss}>{error}</div>}\n      <div className=\"form-details\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"container\">\n            <label className=\"container-label\">\n              <img src=\"../img/email_1.png\" alt=\"email\" />\n            </label>\n            <input\n              ref={emailRef}\n              name=\"email\"\n              required\n              type=\"email\"\n              className=\"container-input\"\n              placeholder=\"Enter Email\"\n            />\n          </div>\n          <div className=\"container\">\n            <label className=\"container-label\">\n              <img src=\"../img/password_1.png\" alt=\"password\" />\n            </label>\n            <input\n              ref={passwordRef}\n              name=\"password\"\n              required\n              autoComplete=\"true\"\n              type=\"password\"\n              className=\"container-input\"\n              placeholder=\"Enter Password\"\n            />\n          </div>\n\n          <div className=\"container\">\n            <button disabled={loading} className=\"signup-btn\">\n              LogIn\n            </button>\n          </div>\n          <div className=\"container\">\n            <p>\n              {\" \"}\n              <strong>\n                <NavLink to=\"/Forgot_Password\" className=\"forgot_password\">\n                  Forgot Password?\n                </NavLink>\n              </strong>\n            </p>\n          </div>\n          <div className=\"container\">\n            <p>\n              Don't have an account?{\" \"}\n              <strong>\n                <NavLink to=\"/Signup\">SignUp</NavLink>\n              </strong>\n            </p>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","/home/meetshah/Desktop/E-learning/E-Learning-platform/src/container/signup/signup.js",["101","102","103","104","105"],"/home/meetshah/Desktop/E-learning/E-Learning-platform/src/container/forgot_password/Forgot_password.js",[],"/home/meetshah/Desktop/E-learning/E-Learning-platform/src/contexts/AuthContext.js",[],"/home/meetshah/Desktop/E-learning/E-Learning-platform/src/firebase.js",[],"/home/meetshah/Desktop/E-learning/E-Learning-platform/src/component/dashboard/Dashboard.js",["106"],"import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nfunction Dashboard(props) {\n  const { currentUser, logout } = useAuth();\n  const [alertCss, setAlertCss] = useState(\"danger\");\n  const [error, setError] = useState();\n  const history = useHistory();\n  async function handleLogout() {\n    setError(\"\");\n    try {\n      await logout();\n      history.push(\"/Login\");\n    } catch {\n      setError(\"Failed to Logout\");\n    }\n  }\n  return (\n    <div className=\"dashboard_container\">\n      {error && <div className={alertCss}>{error}</div>}\n      Profile:\n      <div className=\"success\">Welcome {currentUser?.email} </div>\n      <div className=\"update-btn\">\n        <Link to=\"/Update-profile\">Update Profile</Link>\n      </div>\n      <button onClick={handleLogout} className=\"logout-btn \">\n        Logout\n      </button>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","/home/meetshah/Desktop/E-learning/E-Learning-platform/src/container/PrivateRoutes.js",[],"/home/meetshah/Desktop/E-learning/E-Learning-platform/src/component/Update_Profile/UpdateProfile.js",["107","108","109"],"import React, { Component, useRef, useState } from \"react\";\n\nimport { NavLink, Redirect, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nfunction UpdateProfile(props) {\n  console.log(\"component rendered\")\n  \n  const [alertCss, setAlertCss] = useState(\"danger\");\n  const [error,setError] = useState(\"\")\n  const [loading,setLoading] = useState(false)\n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const passwordConfirmRef = useRef()\n  const { currentUser, updateEmail, updatePassword } = useAuth();\n  const history = useHistory()\n  const [msg,setMsg] = useState('')\n  \n   function handleSubmit (e) {\n    e.preventDefault();\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\")\n    }\n    const promises = []\n    setLoading(true)\n    setError('')\n    if(emailRef.current.value !== currentUser.email){\n        promises.push(updateEmail(emailRef.current.value))\n        setAlertCss(\"success\")\n        setMsg(\"Details Updated\")\n    }\n    if(passwordRef.current.value){\n        promises.push(updatePassword(passwordRef.current.value))\n        setAlertCss(\"success\")\n        setMsg(\"Details Updated\")\n\n    }\n    Promise.all(promises).then(()=>{\n      console.log(Promise)\n      setTimeout(()=>{\n        history.push(\"/Login\")\n      },1000)\n    \n    }).catch(error => {\n        setError(\"Failed to update details\")\n    }).finally(()=>{\n        setLoading(false)\n    })\n    \n  }\nconsole.log(\"rendered\")\nreturn (\n  <div className=\"Signup\">\n    <div className=\"title\">\n      <h2>\n        <strong>Update-Profile</strong>\n      </h2>\n      <hr className=\"line\" />\n    </div>\n    {msg &&  <div className={alertCss}>{msg}</div>}\n    {error && <div className={alertCss}>{error}</div>}\n    <div className=\"form-details\">\n      <form  onSubmit={handleSubmit}> \n\n        <div className=\"container\">\n          <label className=\"container-label\">\n            <img src=\"../img/email_1.png\" alt=\"email\" />\n          </label>\n          <input\n            ref={emailRef}\n            name=\"email\"\n            required\n            type=\"email\"\n            defaultValue={currentUser.email}\n            className=\"container-input\"\n          />\n        </div>\n        <div className=\"container\">\n          <label className=\"container-label\">\n            <img src=\"../img/password_1.png\" alt=\"password\" />\n          </label>\n          <input\n            ref={passwordRef}\n            name=\"password\"\n            \n            autoComplete=\"true\"\n            type=\"password\"\n            className=\"container-input\"\n            placeholder=\"Leave blank to keep the same\"\n          />\n        </div>\n        {/* testing */}\n        <div className=\"container\">\n          <label className=\"container-label\">\n            <img src=\"../img/password_1.png\" alt=\"confirm password\" />\n          </label>\n          <input\n            ref={passwordConfirmRef}\n            name=\"confirm_password\"\n            \n            autoComplete=\"true\"\n            type=\"password\"\n            className=\"container-input\"\n            placeholder=\"Leave blank to keep the same\"\n          />\n        </div>\n        {/* testing */}\n\n        <div className=\"container\">\n          <button disabled={loading} className=\"signup-btn\">\n            Update\n          </button>\n        </div>\n        <div className=\"container\">\n          <p>\n            \n            <strong>\n              <NavLink to=\"/\">Cancel</NavLink>\n            </strong>\n          </p>\n        </div>\n      </form>\n    </div>\n  </div>\n);\n}\nexport default UpdateProfile;\n","/home/meetshah/Desktop/E-learning/E-Learning-platform/src/component/Workshop/WorkshopList.js",["110","111","112","113","114","115","116","117"],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":22,"column":11,"nodeType":"124","messageId":"125","endLine":22,"endColumn":18},{"ruleId":"118","replacedBy":"126"},{"ruleId":"120","replacedBy":"127"},{"ruleId":"122","severity":1,"message":"128","line":1,"column":17,"nodeType":"124","messageId":"125","endLine":1,"endColumn":26},{"ruleId":"122","severity":1,"message":"129","line":2,"column":10,"nodeType":"124","messageId":"125","endLine":2,"endColumn":14},{"ruleId":"130","severity":1,"message":"131","line":18,"column":11,"nodeType":"132","endLine":18,"endColumn":39},{"ruleId":"122","severity":1,"message":"133","line":2,"column":8,"nodeType":"124","messageId":"125","endLine":2,"endColumn":16},{"ruleId":"122","severity":1,"message":"134","line":3,"column":8,"nodeType":"124","messageId":"125","endLine":3,"endColumn":19},{"ruleId":"122","severity":1,"message":"135","line":2,"column":8,"nodeType":"124","messageId":"125","endLine":2,"endColumn":14},{"ruleId":"122","severity":1,"message":"129","line":5,"column":10,"nodeType":"124","messageId":"125","endLine":5,"endColumn":14},{"ruleId":"122","severity":1,"message":"136","line":6,"column":8,"nodeType":"124","messageId":"125","endLine":6,"endColumn":19},{"ruleId":"122","severity":1,"message":"137","line":9,"column":26,"nodeType":"124","messageId":"125","endLine":9,"endColumn":43},{"ruleId":"122","severity":1,"message":"138","line":14,"column":10,"nodeType":"124","messageId":"125","endLine":14,"endColumn":16},{"ruleId":"122","severity":1,"message":"139","line":16,"column":10,"nodeType":"124","messageId":"125","endLine":16,"endColumn":17},{"ruleId":"122","severity":1,"message":"140","line":16,"column":18,"nodeType":"124","messageId":"125","endLine":16,"endColumn":28},{"ruleId":"122","severity":1,"message":"141","line":119,"column":9,"nodeType":"124","messageId":"125","endLine":119,"endColumn":26},{"ruleId":"122","severity":1,"message":"142","line":7,"column":20,"nodeType":"124","messageId":"125","endLine":7,"endColumn":31},{"ruleId":"122","severity":1,"message":"128","line":1,"column":17,"nodeType":"124","messageId":"125","endLine":1,"endColumn":26},{"ruleId":"122","severity":1,"message":"143","line":3,"column":19,"nodeType":"124","messageId":"125","endLine":3,"endColumn":27},{"ruleId":"122","severity":1,"message":"144","line":4,"column":8,"nodeType":"124","messageId":"125","endLine":4,"endColumn":13},{"ruleId":"122","severity":1,"message":"142","line":13,"column":20,"nodeType":"124","messageId":"125","endLine":13,"endColumn":31},{"ruleId":"122","severity":1,"message":"145","line":19,"column":19,"nodeType":"124","messageId":"125","endLine":19,"endColumn":30},{"ruleId":"122","severity":1,"message":"142","line":6,"column":20,"nodeType":"124","messageId":"125","endLine":6,"endColumn":31},{"ruleId":"122","severity":1,"message":"128","line":1,"column":17,"nodeType":"124","messageId":"125","endLine":1,"endColumn":26},{"ruleId":"122","severity":1,"message":"143","line":3,"column":19,"nodeType":"124","messageId":"125","endLine":3,"endColumn":27},{"ruleId":"122","severity":1,"message":"144","line":4,"column":8,"nodeType":"124","messageId":"125","endLine":4,"endColumn":13},{"ruleId":"122","severity":1,"message":"146","line":1,"column":17,"nodeType":"124","messageId":"125","endLine":1,"endColumn":26},{"ruleId":"122","severity":1,"message":"147","line":6,"column":10,"nodeType":"124","messageId":"125","endLine":6,"endColumn":24},{"ruleId":"122","severity":1,"message":"137","line":6,"column":26,"nodeType":"124","messageId":"125","endLine":6,"endColumn":43},{"ruleId":"122","severity":1,"message":"148","line":7,"column":22,"nodeType":"124","messageId":"125","endLine":7,"endColumn":35},{"ruleId":"122","severity":1,"message":"149","line":8,"column":10,"nodeType":"124","messageId":"125","endLine":8,"endColumn":16},{"ruleId":"122","severity":1,"message":"150","line":8,"column":17,"nodeType":"124","messageId":"125","endLine":8,"endColumn":26},{"ruleId":"122","severity":1,"message":"151","line":9,"column":10,"nodeType":"124","messageId":"125","endLine":9,"endColumn":16},{"ruleId":"122","severity":1,"message":"152","line":9,"column":17,"nodeType":"124","messageId":"125","endLine":9,"endColumn":26},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"no-unused-vars","'useAuth' is defined but never used.","Identifier","unusedVar",["153"],["154"],"'Component' is defined but never used.","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'LoadData' is defined but never used.","'filterStack' is defined but never used.","'Navbar' is defined but never used.","'Description' is defined but never used.","'setMaindataSource' is assigned a value but never used.","'status' is assigned a value but never used.","'newComp' is assigned a value but never used.","'setNewComp' is assigned a value but never used.","'courseDescription' is assigned a value but never used.","'setAlertCss' is assigned a value but never used.","'Redirect' is defined but never used.","'axios' is defined but never used.","'currentUser' is assigned a value but never used.","'useEffect' is defined but never used.","'mainDataSource' is assigned a value but never used.","'setDataSource' is assigned a value but never used.","'imgcss' is assigned a value but never used.","'setImgcss' is assigned a value but never used.","'regcss' is assigned a value but never used.","'setRegcss' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]