[{"D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\index.js":"1","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\reportWebVitals.js":"2","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\App.js":"3","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\contexts\\AuthContext.js":"4","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\store\\reducers\\priceReducer.js":"5","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\firebase.js":"6","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\Navbar.js":"7","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\Description.js":"8","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\CourseData.js":"9","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\Registration.js":"10","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\container\\PrivateRoutes.js":"11","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\dashboard\\Dashboard.js":"12","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\container\\signup\\signup.js":"13","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\Update_Profile\\UpdateProfile.js":"14","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\container\\login\\Login.js":"15","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\container\\forgot_password\\Forgot_password.js":"16","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\Workshop\\WorkshopList.js":"17","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\checkout\\checkout.js":"18","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\wishlist\\WishList.js":"19","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\MyLearning\\MyLearning.js":"20","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\LandingPage\\LandingPage.js":"21","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\store\\actions\\actionTypes.js":"22","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\store\\actions\\index.js":"23","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\axios-order.js":"24","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\MyLearning\\PurchasedCourse.js":"25","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\wishlist\\WishlistData.js":"26","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\checkout\\LoadData.js":"27","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\Notification\\Notification.js":"28","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\Modal\\Modal.js":"29","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\Alert\\Alert.js":"30","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\Alert\\WarningAlert.js":"31","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\Alert\\SuccessAlert.js":"32","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\store\\actions\\cartActions.js":"33","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\store\\actions\\coursePriceAction.js":"34","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\color.jsx":"35","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\NewsFeed\\NewsFeed.js":"36","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\Admin\\Admin.js":"37","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\store\\actions\\adminActions.js":"38"},{"size":1375,"mtime":1617283107633,"results":"39","hashOfConfig":"40"},{"size":375,"mtime":1616727931354,"results":"41","hashOfConfig":"40"},{"size":3434,"mtime":1617271141012,"results":"42","hashOfConfig":"40"},{"size":2452,"mtime":1617283350642,"results":"43","hashOfConfig":"40"},{"size":9185,"mtime":1616727931362,"results":"44","hashOfConfig":"40"},{"size":781,"mtime":1616727931351,"results":"45","hashOfConfig":"40"},{"size":8187,"mtime":1617182794666,"results":"46","hashOfConfig":"40"},{"size":8608,"mtime":1617171886114,"results":"47","hashOfConfig":"40"},{"size":20460,"mtime":1617281674676,"results":"48","hashOfConfig":"40"},{"size":4163,"mtime":1616727931242,"results":"49","hashOfConfig":"40"},{"size":769,"mtime":1616727931263,"results":"50","hashOfConfig":"40"},{"size":3568,"mtime":1616727931246,"results":"51","hashOfConfig":"40"},{"size":5438,"mtime":1616727931324,"results":"52","hashOfConfig":"40"},{"size":3791,"mtime":1616727931243,"results":"53","hashOfConfig":"40"},{"size":3548,"mtime":1616727931279,"results":"54","hashOfConfig":"40"},{"size":2073,"mtime":1616727931265,"results":"55","hashOfConfig":"40"},{"size":4255,"mtime":1617086567711,"results":"56","hashOfConfig":"40"},{"size":4706,"mtime":1617171462842,"results":"57","hashOfConfig":"40"},{"size":1328,"mtime":1616727931248,"results":"58","hashOfConfig":"40"},{"size":2266,"mtime":1617113588453,"results":"59","hashOfConfig":"40"},{"size":1660,"mtime":1617264147814,"results":"60","hashOfConfig":"40"},{"size":1634,"mtime":1616727931360,"results":"61","hashOfConfig":"40"},{"size":853,"mtime":1617274574484,"results":"62","hashOfConfig":"40"},{"size":249,"mtime":1616727931232,"results":"63","hashOfConfig":"40"},{"size":2002,"mtime":1616727931239,"results":"64","hashOfConfig":"40"},{"size":2669,"mtime":1616727931262,"results":"65","hashOfConfig":"40"},{"size":2678,"mtime":1616727931245,"results":"66","hashOfConfig":"40"},{"size":2046,"mtime":1616727931241,"results":"67","hashOfConfig":"40"},{"size":1536,"mtime":1616727931237,"results":"68","hashOfConfig":"40"},{"size":794,"mtime":1616727931233,"results":"69","hashOfConfig":"40"},{"size":558,"mtime":1616727931233,"results":"70","hashOfConfig":"40"},{"size":717,"mtime":1616727931233,"results":"71","hashOfConfig":"40"},{"size":4655,"mtime":1617172010540,"results":"72","hashOfConfig":"40"},{"size":9823,"mtime":1617282215878,"results":"73","hashOfConfig":"40"},{"size":2407,"mtime":1617098208779,"results":"74","hashOfConfig":"40"},{"size":3769,"mtime":1617191240640,"results":"75","hashOfConfig":"40"},{"size":4180,"mtime":1617277944763,"results":"76","hashOfConfig":"40"},{"size":590,"mtime":1617284853189,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1wxligb",{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"82"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"82"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"82"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"82"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"82"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"82"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"82"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"82"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\index.js",["183"],"D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\reportWebVitals.js",[],["184","185"],"D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\App.js",["186","187","188","189"],"import React, { useEffect, useState } from \"react\";\r\nimport './App.css';\r\nimport \"./css/form_style.css\"\r\nimport \"./css/course-container.css\"\r\nimport \"./css/Navbar_style.css\"\r\nimport \"./css/desc_style.css\"\r\n// import Form from \"./component/form\"\r\nimport Navbar from \"./component/Navbar\"\r\nimport CourseData from './component/CourseData';\r\nimport Description from \"./component/Description\"\r\n// import Frontend from \"./component/Frontend\"\r\n// import {BrowserRouter as Router,NavLink, Redirect, Prompt, Link} from 'react-router-dom';\r\nimport Route from 'react-router-dom/Route';\r\n// import { Link } from 'react-router-dom';\r\nimport Registration from \"./component/Registration\"\r\nimport Signup from './container/signup/signup';\r\nimport Login from \"./container/login/Login\";\r\n// import Recaptcha from \"react-recaptcha\"\r\nimport Forgot_password from './container/forgot_password/Forgot_password';\r\nimport Dashboard from './component/dashboard/Dashboard';\r\nimport PrivateRoutes from './container/PrivateRoutes';\r\nimport UpdateProfile from './component/Update_Profile/UpdateProfile';\r\nimport {  useAuth } from \"./contexts/AuthContext\";\r\nimport WorkshopList from './component/Workshop/WorkshopList';\r\nimport Checkout from './component/checkout/checkout';\r\nimport WishList from './component/wishlist/WishList';\r\nimport MyLearning from './component/MyLearning/MyLearning';\r\nimport LandingPage from './component/LandingPage/LandingPage';\r\nimport NewsFeed from \"./component/NewsFeed/NewsFeed\"\r\n// import * as actions from \"../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport Admin from \"./component/Admin/Admin\";\r\nfunction App(props) {\r\n  const [notifyDisplay, setNotifyDisplay] = useState(false)\r\n  return (\r\n    <div className=\"App\" >\r\n      <Navbar/>\r\n      <Route path=\"/Admin\" exact component={Admin}/>\r\n\r\n      <PrivateRoutes exact path=\"/\" component={Dashboard} msg=\"Please login to view dashboard\"/>\r\n      <PrivateRoutes exact path=\"/Update-profile\" component={UpdateProfile}/>\r\n      <Route path=\"/Home\" exact component={LandingPage}/>\r\n      <Route path=\"/Courses/:value\" exact component={CourseData}/>\r\n      <Route path=\"/Registration\" exact component={Registration}/>\r\n      <Route path=\"/Workshop\" exact component={WorkshopList}/>\r\n      <Route path=\"/Signup\" exact component={Signup}/>\r\n      <Route path=\"/Login\" exact component={Login}/>\r\n      <Route path=\"/Forgot_Password\" exact component={Forgot_password}/>\r\n      <Route path=\"/Course_Description/:value\"  component={Description}/>\r\n      <Route path=\"/Dashboard\"  component={Dashboard}/>\r\n      <Route path=\"/NewsFeed\" exact component={NewsFeed}/>\r\n      \r\n      <PrivateRoutes path=\"/Notification\"  exact component={Notification} msg=\"Please login to Notification\"/>\r\n      <PrivateRoutes path=\"/Checkout\"  component={Checkout} msg=\"Please login to view cart\"/>\r\n      <PrivateRoutes path=\"/Wishlist\"  component={WishList} msg=\"Please login to view wishlist\"/>\r\n      <PrivateRoutes path=\"/My-Learning\"  component={MyLearning} msg=\"Please login to view Learning\"/>\r\n\r\n\r\n\r\n      \r\n      {/* <Route path=\"/all/frontend\" exact component={Frontend}/> */}\r\n\r\n       {/* <CourseData/> */}\r\n       {/* <Form/> */}\r\n      {/* <Description /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\contexts\\AuthContext.js",[],"D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\store\\reducers\\priceReducer.js",["190"],"import * as actionTypes from \"../actions/actionTypes\";\r\n// import { assignTableContent } from \"../actions/coursePriceAction\";\r\n// import { useAuth } from \"../../contexts/AuthContext\";\r\n// import data from \"../../data.json\"\r\nconst initialState = {\r\n    price: 0,\r\n    details:\"TEST\",\r\n    cart:[],\r\n    dataSource:[],\r\n    mainDataSource:[],\r\n    wishlist: [],\r\n    cartId:[],\r\n    wishlistId:[],\r\n    userId:\"\",\r\n    currentUser:null,\r\n    order:[],\r\n    fetchedOrder:[],\r\n    responseId:\"\",\r\n    learning:[],\r\n    purchasedCourseId:[],\r\n    toastState:false,\r\n    formatState:true,\r\n    docName:[],\r\n    totalNoOfPurchasedCourses:0,\r\n    sortedArray:[],\r\n    TrendingCourses:[],\r\n    TableContent:[],\r\n    Authentication:false,\r\n    paidCourseId:[],\r\n    notificationState:false,\r\n    notificationItems:[]\r\n  };\r\n  const assignData = (state,action) =>{\r\n    return{\r\n      ...state,\r\n      currentUser:action.currentUser,\r\n      dataSource:action.data,\r\n      mainDataSource:action.data\r\n      // dataSource:[...state.dataSource,action.data],\r\n\r\n      // mainDataSource:[...state.dataSource,action.data],\r\n    }\r\n  }\r\n  const setUserId = (state,action) => {\r\n    // console.log(\"action.id\",action.id)\r\n    return{\r\n      ...state,\r\n      userId:action.id,\r\n    }\r\n  }\r\n  const orderedData = (state,action) =>{\r\n    return{\r\n      ...state,\r\n      order:action.data,\r\n      toastState:true\r\n      // mainDataSource:action.data,\r\n    }\r\n  }\r\n  const addDetails = (state,action) =>{\r\n      // console.log(\"cart\",action.cart)\r\n      return {\r\n          ...state,\r\n        //   price:state.price.concat(+action.price),\r\n        cartId:state.cartId.concat([action.cart.courseId]),\r\n          cart:state.cart.concat([action.cart]),  \r\n      }\r\n  }\r\n  const calculateCartPrice = (state) => {\r\n      // console.log(\"cart price reducer\")\r\n      // console.log(\"cart\",state.cart);\r\n        let totalPrice = 0\r\n        state.cart.map((data) => {\r\n            totalPrice  = totalPrice + data.price\r\n        })\r\n      return{\r\n          ...state,\r\n          price:totalPrice\r\n       \r\n      }\r\n  }\r\n  const resetData = (state,action) => {\r\n      // console.log(\"reset\")\r\n      return{\r\n          ...state,\r\n          cart:[]\r\n      }\r\n  } \r\n  const removeFromCart = (state,action) => {\r\n      // console.log(\"remove from cart\")\r\n      // console.log(\"action index\",action.index)\r\n      // console.log(typeof(action.index))\r\n\r\n        const removeEle = (a,index) =>{\r\n            let newArray = [...a]\r\n            newArray.splice(index,1)\r\n            return newArray\r\n        }\r\n      return{\r\n        ...state,\r\n        cart:removeEle(state.cart,action.index),\r\n        cartId:removeEle(state.cartId,action.index)\r\n        // calculateCartPrice(state,cart)\r\n      }\r\n  }\r\n  const moveToWishlist = (state,action) =>{\r\n      // console.log(\"item moved to wishlist\")\r\n      // console.log(\"wishlist array\",state.wishlist)\r\n      return{\r\n            ...state,\r\n          wishlist:state.wishlist.concat([state.mainDataSource[action.index]]),\r\n        \r\n      }\r\n  }\r\n  const addToWishlistDirectly = (state,action)=>{\r\n    return{\r\n      ...state,\r\n      wishlistId:state.wishlistId.concat([action.wishlistId])\r\n    }\r\n  }\r\n  const removeFromWishList = (state,action) =>{\r\n      // console.log(\"removefromwishlist\")\r\n      const removeSlected =(wishlist,index) =>{\r\n        const newArray = [...wishlist]\r\n        newArray.splice(index,1)\r\n        return newArray\r\n      }\r\n      return{\r\n        ...state,\r\n        wishlist:removeSlected(state.wishlist,action.index)\r\n      }\r\n  }\r\n  const moveToCart = (state,action) => {\r\n      // console.log(\"item moved to cart\")\r\n      return{\r\n        ...state,\r\n        cart:state.cart.concat([state.wishlist[action.index]])\r\n      }\r\n  }\r\n  const setResponseId = (state,action) => {\r\n    return{\r\n      ...state,\r\n      responseId:action.id\r\n    }\r\n  }\r\n  const setFetchedOrder = (state,action) => {\r\n    return{\r\n      ...state,\r\n      fetchedOrder:action.data,\r\n    }\r\n  }\r\n  const clearCart = (state,action) =>{\r\n    return{\r\n      ...state,\r\n      cart:[],\r\n      price:0,\r\n      cartId:[]\r\n    }\r\n  }\r\n  const addToLearningArray = (state,action) => {\r\n    // console.log(action.purchasedCourse);\r\n    console.log(\"learning array\",state.learning)\r\n    console.log(action.purchasedCourse.purchasedCourse[0]);\r\n\r\n    return{\r\n      ...state,\r\n      learning:[...state.learning,action.purchasedCourse],\r\n      totalNoOfPurchasedCourses:state.totalNoOfPurchasedCourses + (+[action.purchasedCourse.purchasedCourse.length])\r\n    }\r\n  }\r\n\r\n  const purchasedCourseId = (state,action) => {\r\n    console.log(\"purchased courseid array\",state.purchasedCourseId)\r\n    return{\r\n      ...state,\r\n      purchasedCourseId:state.purchasedCourseId.concat([action.id])\r\n    }\r\n  }\r\n  const setToast = (state,action) => {\r\n    return{\r\n      ...state,\r\n      toastState:true\r\n    }\r\n  }\r\n  const resetToast = (state,action) => {\r\n    return{\r\n      ...state,\r\n      toastState:false\r\n    }\r\n  }\r\n  const setEmpty = (state,action)=>{\r\n    return{\r\n      ...state,\r\n      purchasedCourseId:[],\r\n      learning:[],\r\n      totalNoOfPurchasedCourses:0,\r\n      paidCourseId:[]\r\n    }\r\n  }\r\n  const setFormateState =  (state,action) => {\r\n    return{\r\n      ...state,\r\n      formatState:false\r\n    }\r\n  }\r\n  const assignWishListData = (state,action) => {\r\n    return{\r\n      ...state,\r\n      wishlist:action.data,\r\n      \r\n    }\r\n  }\r\n  const assignCartData  = (state,action) => {\r\n    return{\r\n      ...state,\r\n      cart:action.data\r\n    }\r\n  }\r\n  // const setPurchasedCourses = (state,action) =>{\r\n  //   console.log(action.newList);\r\n  //   return{\r\n  //     ...state,\r\n  //     sortedArray:action.newList\r\n  //   }\r\n  // }\r\n  const assignTrendingCourses = (state,action) =>{\r\n    return{\r\n      ...state,\r\n      TrendingCourses:action.data\r\n    }\r\n  }\r\n  const assignTableContent = (state,action) => {\r\n    // console.log(action.data);\r\n    // console.log(state.purchasedCourseId);\r\n    return{\r\n      ...state,\r\n      TableContent:action.data\r\n    }\r\n  }\r\n  const paidCourseId =(state,action) =>{\r\n    return{\r\n      ...state,\r\n      paidCourseId:[...state.paidCourseId,action.id]\r\n    }\r\n  }\r\n  const showNotification = (state,action) =>{\r\n    console.log(\"called\");\r\n    return{\r\n      ...state,\r\n      notificationState:!state.notificationState\r\n    }\r\n  }\r\n  const AddMsgToNotificationList = (state,action) =>{\r\n    return{\r\n      ...state,\r\n      notificationItems:[action.Item,...state.notificationItems]\r\n    }\r\n  }\r\n  const ClearNotificationList = (state,action) =>{\r\n    return{\r\n      ...state,\r\n      notificationItems:[]\r\n    }\r\n  }\r\n  \r\n  const reducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case actionTypes.ADD_TO_CART: return addDetails(state,action)\r\n        case actionTypes.RESET_DATA: return  resetData(state,action)\r\n        case actionTypes.REMOVE_FROM_CART: return removeFromCart(state,action)\r\n        case actionTypes.CALCULATE_CART_PRICE: return calculateCartPrice(state)\r\n        case actionTypes.MOVE_TO_WISHLIST: return moveToWishlist(state,action)\r\n        case actionTypes.REMOVE_FROM_WISHLIST: return removeFromWishList(state,action)\r\n        case actionTypes.MOVE_TO_CART_FROM_WISHLIST:return moveToCart(state,action)\r\n        case actionTypes.ADD_TO_WISHLIST_DIRECTLY:return addToWishlistDirectly(state,action)\r\n        case actionTypes.ASSIGN_DATA:return assignData(state,action)\r\n        case actionTypes.SET_USER_ID:return setUserId(state,action)\r\n        case actionTypes.ORDERED_DATA:return orderedData(state,action)\r\n        case actionTypes.CLEAR_CART: return clearCart(state,action);\r\n        case actionTypes.SET_RESPONSE_ID: return setResponseId(state,action)\r\n        case actionTypes.SET_FETCHED_ORDER: return setFetchedOrder(state,action)\r\n        case actionTypes.ADD_TO_LEARNING_ARRAY:return addToLearningArray(state,action)\r\n        case actionTypes.SET_EMPTY:return setEmpty(state,action)\r\n        case actionTypes.PURCHASED_COURSE_ID:return purchasedCourseId(state,action)\r\n        case actionTypes.SET_TOAST:return setToast(state,action)\r\n        case actionTypes.ASSIGN_WISHLIST_DATA:return assignWishListData(state,action)\r\n        case actionTypes.SET_FORTMAT_STATE:return setFormateState(state,action)\r\n        case actionTypes.ASSIGN_CART_DATA:return assignCartData(state,action)\r\n        case actionTypes.RESET_TOAST:return resetToast(state,action)\r\n        case actionTypes.ASSIGN_TRENDING_COURSES: return assignTrendingCourses(state,action)\r\n        case actionTypes.ASSIGN_TABLECONTENT: return assignTableContent(state,action)\r\n        case actionTypes.PAID_COURSE_ID: return paidCourseId(state,action)\r\n        case actionTypes.SHOW_NOTIFICATION:return showNotification(state,action)\r\n        case actionTypes.ADD_MSG_TO_NOTIFICATION_LIST:return AddMsgToNotificationList(state,action)\r\n        case actionTypes.CLEAR_NOTIFICATION_LIST:return ClearNotificationList(state,action)\r\n\r\n        \r\n        // case actionTypes.SET_SORTED_LIST_TO_LEARNING_ARRAY:return setPurchasedCourses(state,action)\r\n        default:\r\n            return state\r\n    }\r\n  }\r\n\r\n  \r\n  export default reducer","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\firebase.js",[],"D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\Navbar.js",["191","192","193","194"],"import React, { Component, useEffect, useState } from \"react\";\r\nimport { Link,NavLink } from \"react-router-dom\";\r\nimport * as actions from \"../store/actions/index\"\r\nimport { connect } from \"react-redux\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport Notification from \"./Notification/Notification\";\r\nimport color from \"../color.jsx\"\r\nconst Navbar = (props) => {\r\n  const [newcolor,setNewColor] = useState(\"black\")\r\n  const { currentUser} = useAuth()\r\n  useEffect(() => {\r\n    console.log(props.wishlist.length);\r\n    console.log(\"notifi.\",props.notificationState);\r\n    console.log(props.notificationItems.length);\r\n    // autoChangeColor()\r\n    return () => {\r\n      \r\n    }\r\n  }, [])\r\nconst autoChangeColor  = () => {\r\n  const r = document.querySelector(':root');\r\n  setInterval(() => {\r\n    const value = Math.floor(100000 + Math.random() * 900000)\r\n    const newValue = `#${value}`\r\n    console.log(newValue);\r\n    r.style.setProperty('--black', newValue )\r\n  }, 1000);\r\n}\r\n  const changeColor = () =>{\r\n    let colorName = prompt(\"Enter Color Name\",newcolor)\r\n    console.log(color);\r\n    console.log(colorName);\r\n    console.log(color.includes(colorName))\r\n    // if(color.includes(colorName)){\r\n      setNewColor(colorName)\r\n      const r = document.querySelector(':root');\r\n      r.style.setProperty('--black', colorName)\r\n      // myFunction_get()\r\n      // function myFunction_get() {\r\n      //   const rs = getComputedStyle(r);\r\n      //   // alert(\"The value of --whitesmoke is: \" + rs.getPropertyValue('--whitesmoke'));\r\n      // }\r\n      // function myFunction_set() {\r\n      //   r.style.setProperty('--blue', 'lightblue');\r\n      // }\r\n      // let today = new Date();\r\n      // let hour = today.getHours();\r\n      // if(hour>=6 && hour<12){\r\n      //   r.style.setProperty('--black', 'white');\r\n      // }\r\n      // if(hour>=12){\r\n      //   r.style.setProperty('--black', colorName);\r\n      // }\r\n      // if(hour>=18 && hour<6){\r\n      //   r.style.setProperty('--black', 'black');\r\n      // }\r\n    // }\r\n    // else{\r\n    //   alert(\"Enter Valid Color Name\")\r\n    // }\r\n    \r\n  }\r\n  const handleMouseClicked = () => {\r\n    console.log(\"nav called\");\r\n    props.showNotification()\r\n  }\r\n  // const handleMouseLeave = () => {\r\n  //   props.showNotification()\r\n    \r\n  // }\r\n  return (\r\n    <>\r\n      <div className=\"nav\">\r\n\r\n        <ul>\r\n          {/* <li className=\"logo\">\r\n            <div>\r\n              <li>\r\n            <NavLink to=\"/\" exact activeStyle={{color:\"blue\"}}>\r\n\r\n              <img\r\n                src=\"../img/simform-logo.png\"\r\n                alt=\"img\"\r\n                className=\"main_logo\"\r\n              />\r\n              </NavLink>\r\n              </li>\r\n            </div>\r\n          </li> */}\r\n          <li onClick={()=>changeColor()}>\r\n                    <i class=\"fas fa-palette\" aria-hidden=\"true\" title=\"change Color\" style={{fontSize:\"32px\"}}>\r\n                </i>  \r\n          </li>\r\n          <li>\r\n            <div>\r\n              <li>\r\n                <NavLink to=\"/Home\" exact activeStyle={{color:\"black\"}}> \r\n                <img\r\n                // src=\"../img/simform-logo.png\"\r\n                src=\"../img/test-1-logo.png\"\r\n                alt=\"img\"\r\n                className=\"main_logo\"\r\n              />\r\n              </NavLink>\r\n              </li>\r\n            </div>\r\n          </li>\r\n\r\n          <li>\r\n            <div>\r\n              <li>\r\n              <input\r\n                className=\"search\"\r\n                required\r\n                name=\"\"\r\n                type=\"text\"\r\n                placeholder=\"Search Everything Here\"\r\n              />\r\n              </li>\r\n            </div>\r\n          </li>\r\n\r\n          <li>\r\n            <div>\r\n              <li className=\"bottom-line\">\r\n                <NavLink to=\"/Home\" exact activeStyle={{color:\"orange\"}}>Home</NavLink>\r\n              </li>\r\n            </div>\r\n          </li>\r\n\r\n          <li>\r\n            <div>\r\n              <li className=\"bottom-line\">\r\n                <NavLink to=\"/Courses/all\" exact activeStyle={{color:\"orange\"}}>Courses</NavLink>\r\n              </li>\r\n            </div>\r\n          </li>\r\n\r\n          <li>\r\n            <div>\r\n              <li className=\"bottom-line\">\r\n                <NavLink to=\"/Workshop\" exact activeStyle={{color:\"orange\"}}>Workshop Registration</NavLink>\r\n              </li>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div>\r\n              <li className=\"bottom-line\">\r\n                <NavLink to=\"/NewsFeed\" exact activeStyle={{color:\"orange\"}}>News Feed</NavLink>\r\n              </li>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div>\r\n              <li className=\"bottom-line\">\r\n                {/* <NavLink to=\"/My-learning\" exact activeStyle={{color:\"red\"}}>My learning</NavLink> */}\r\n                {!currentUser ? (<NavLink to=\"/Signup\" exact activeStyle={{color:\"orange\"}}>Signup</NavLink>): (<NavLink to=\"/Dashboard\" exact activeStyle={{color:\"orange\"}}>Dashboard</NavLink>)}\r\n\r\n              </li>\r\n            </div>\r\n          </li>\r\n\r\n          <li>\r\n            <div>\r\n              <li className=\"bottom-line\">\r\n                {/* <NavLink to=\"/My-learning\" exact activeStyle={{color:\"red\"}}>My learning</NavLink> */}\r\n                {currentUser ? ((<NavLink to=\"/My-Learning\" exact activeStyle={{color:\"orange\"}}>My Learning</NavLink>)):(<NavLink to=\"/Login\" exact activeStyle={{color:\"orange\"}}>Login</NavLink>)}\r\n\r\n              </li>\r\n            </div>\r\n          </li>\r\n         \r\n          <li>\r\n            <div onClick={()=>handleMouseClicked()}\r\n                  // onMouseLeave={()=>handleMouseLeave()}\r\n                 >\r\n                    {props.notificationState ? (<Notification/>) : null}\r\n              <li className=\"notification\">\r\n              {currentUser ? ( \r\n                // <NavLink to=\"\" exact activeStyle={{color:\"orange\"}}>\r\n                  <i class=\"fa fa-bell notificationIcon\" aria-hidden=\"true\" title=\"notification\" style={{fontSize:\"32px\"}}>\r\n                    {props.notificationItems.length > 0 ? <div className=\"notificationCounter\">{props.notificationItems.length}</div> : null }\r\n                </i>\r\n              //</NavLink>\r\n                ):null}\r\n\r\n              </li>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div>\r\n              <li >\r\n                {/* <NavLink to=\"/My-learning\" exact activeStyle={{color:\"red\"}}>My learning</NavLink> */}\r\n                <NavLink to=\"/Wishlist\" exact activeStyle={{color:\"orange\"}}><i className=\"fa fa-heart wishlistIcon\" style={{fontSize:\"32px\"}}  title=\"wishlist\">\r\n                {props.wishlist.length > 0 ? <div className=\"wishlistCounter\">{props.wishlist.length}</div> : null }</i></NavLink>\r\n\r\n              </li>\r\n            </div>\r\n          </li>\r\n\r\n          <li>\r\n            <div >\r\n              <li >\r\n                {/* <NavLink to=\"/My-learning\" exact activeStyle={{color:\"red\"}}>My learning</NavLink> */}\r\n                <NavLink to=\"/Checkout\" exact activeStyle={{color:\"orange\"}}><i className=\"fa fa-shopping-cart cartIcon\"  aria-hidden=\"true\" title=\"cart\" style={{fontSize:\"32px\"}}>\r\n                  {props.cart.length > 0 ? <div className=\"cartCounter\">{props.cart.length}</div> : null }</i></NavLink>\r\n\r\n              </li>\r\n            </div>\r\n          </li>\r\n          \r\n          {/* <a href=\"https://github.com\">\r\n            <li>\r\n              <div className=\"fav_logo\">\r\n                <img src=\"../img/fav.png\" alt=\"fav\" />\r\n              </div>\r\n            </li>\r\n          </a> */}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cart: state.cartDetails.cart,\r\n    wishlist:state.cartDetails.wishlist,\r\n    currentUser:state.cartDetails.currentUser,\r\n    userId:state.cartDetails.userId,\r\n    notificationState:state.cartDetails.notificationState,\r\n    notificationItems:state.cartDetails.notificationItems\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\nreturn{\r\n  showNotification:()=>dispatch(actions.showNotification())\r\n}\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Navbar);\r\n","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\Description.js",["195","196","197","198","199"],"import React, { useEffect, useState } from \"react\";\r\nimport * as actions from \"../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"../component/Modal/Modal\";\r\nimport { WarningAlert } from \"./Alert/WarningAlert\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nfunction Description(props) {\r\n  const [alertState, setAlertState] = useState(false);\r\n  const [alertMsg, setAlertMsg] = useState(\"\");\r\n  const [displayStyle, setDisplayStyle] = useState(\"none\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [link, setLink] = useState(null);\r\n  const [check, setCheck] = useState(false);\r\n  const [title, setTitle] = useState(null);\r\n  const [lockDisplay, setLockDisplay] = useState(\"block\")\r\n  const { currentUser } = useAuth();\r\n\r\n  useEffect(() => {\r\n    console.log();\r\n    props.getTableContent(currentUser.uid);\r\n\r\n    setTimeout(() => {\r\n      console.log(props.paidCourseId);\r\n    }, 2000);\r\n    \r\n  }, []);\r\n  const handleClick = (e, course_price, data, id) => {\r\n    console.log(\"button clicked\");\r\n\r\n     if(props.paidCourseId.includes(id)){\r\n      setAlertState(true);\r\n      setAlertMsg(\"Course Already Purchased, Please Check Your My-Learning tab\");\r\n    }\r\n    else{\r\n      if (props.price < 10000 ) {\r\n        if (props.cartId.includes(id)) {\r\n          setAlertState(true);\r\n          setAlertMsg(\"Course Already Added in Cart\");\r\n        } else if (props.purchasedCourseId.includes(id)) {\r\n          setAlertState(true);\r\n          setAlertMsg(\r\n            \"Course Already Purchased, Please Check Your My-Learning tab\"\r\n          );\r\n        } else {\r\n          setAlertState(false);\r\n          props.addDetails(data);\r\n          props.getCartPrice();\r\n          props.addCartDataToServer(data, props.userId);\r\n        }\r\n      } else if (props.price > 10000 && props.cartId.includes(id)) {\r\n        setAlertState(true);\r\n        setAlertMsg(\"Limit Reached and Course Already Added in Cart\");\r\n      } else {\r\n        setAlertState(true);\r\n        setAlertMsg(\"Limit Reached\");\r\n      }\r\n    }\r\n    setTimeout(() => {\r\n      setAlertState(false);\r\n    }, 4000);\r\n  };\r\n  const toggle = (id,courseId,dropDownId) => {\r\n    if(props.paidCourseId.includes(courseId)){\r\n      setLockDisplay(\"none\")\r\n    }\r\n    let obj2 = document.getElementById(id);\r\n    if (obj2.style.display === \"block\"){\r\n      obj2.style.display = \"none\"\r\n      document.getElementById(dropDownId).classList.remove(\"fa\",\"fa-caret-up\",\"dropDown\")\r\n      document.getElementById(dropDownId).classList.add(\"fa\",\"fa-caret-down\",\"dropDown\")\r\n      \r\n    }\r\n    else \r\n    {\r\n      obj2.style.display = \"block\"\r\n      document.getElementById(dropDownId).classList.remove(\"fa\",\"fa-caret-down\",\"dropDown\")\r\n      document.getElementById(dropDownId).classList.add(\"fa\",\"fa-caret-up\",\"dropDown\")\r\n\r\n    }\r\n  };\r\n  const data = props.location.state.data ? props.location.state.data : null;\r\n  console.log(data);\r\n  const setLinkAndModal = (blockLink, title, id) => {\r\n    console.log(blockLink);\r\n    if(props.paidCourseId.includes(id)){\r\n      setLink(blockLink);\r\n      setShowModal(true);\r\n      setTitle(title);\r\n    }\r\n    else{\r\n      setAlertState(true)\r\n      setAlertMsg(\"Sorry you are not authorized\")\r\n      setTimeout(() => {\r\n        setAlertState(false)\r\n      }, 4000);\r\n    }\r\n  };\r\n  const againSetTheModalState = () => {\r\n    setShowModal(false);\r\n  };\r\n  return (\r\n    <div className=\"description_container\">\r\n      {alertState ? <WarningAlert msg={alertMsg} /> : null}\r\n      {showModal ? (\r\n        <Modal\r\n          url={link}\r\n          title={title}\r\n          resetModal={() => againSetTheModalState()}\r\n        />\r\n      ) : null}\r\n\r\n      <div className=\"first-container\">\r\n        <div className=\"course_title\">\r\n          <div>\r\n          {data.courseName}\r\n          </div>\r\n          <div className=\"course_description\">{data.courseDesc}.....</div>\r\n          <div className=\"category\">{data.category}</div>\r\n        </div>\r\n        <div className=\"CourseContent\">\r\n          <div>\r\n            <h6>Table of Contents</h6>\r\n          </div>\r\n          <div className=\"tableOfContent\">\r\n            {props.TableContent.map((item) => {\r\n              if (item.courseId === data.courseId) {\r\n                return item.data.map((block, i) => (\r\n                  <>\r\n    \r\n                    <div className=\"ContentTitle\" onClick={() => toggle(i,data.courseId,i+\"dropdown\")}>\r\n                      {block.title}\r\n                      <div className=\"dropDown\" >\r\n                          <i \r\n                          className=\"fa fa-caret-down dropDown\"\r\n                          id={i+\"dropdown\"}></i>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div\r\n                      className=\"ContentDescription\"\r\n                      style={{ display: displayStyle }}\r\n                      id={i}\r\n                    >\r\n                      {block.description.map((linkBlock) => (\r\n                        <>\r\n                          <div\r\n                            className=\"ContentDescriptionLink\"\r\n                            onClick={() =>\r\n                              setLinkAndModal(linkBlock.link, linkBlock.title,data.courseId)\r\n                            }\r\n                          >\r\n                            <i className=\"fa fa-play-circle\" style={{marginRight:\"10px\"}}>\r\n                            </i>\r\n                              <strong>{linkBlock.title}</strong>\r\n                            <div className=\"lock\" ><i class=\"fa fa-lock\" aria-hidden=\"true\" title=\"video is locked\" style={{display:lockDisplay}}></i></div>\r\n                          </div>\r\n                        </>\r\n                      ))}\r\n                    </div>\r\n                  </>\r\n                ));\r\n              }\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar-container\">\r\n        <img src={data.courseImg} alt=\"img\" />\r\n        <div className=\"actionButtons\">\r\n          <div className=\"price_data\" value={data.courseId}>\r\n            <img\r\n              alt=\"price\"\r\n              className=\"price_tag\"\r\n              src=\"../img/price.png\"\r\n              value={data.courseId}\r\n            />\r\n            &nbsp;\r\n            <div className=\"price\" value={data.courseId}>\r\n              {data.price}/-\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"buttonWrapper\">\r\n            <button\r\n              className=\"price_btn\"\r\n              onClick={(e) => handleClick(e, data.price, data, data.courseId)}\r\n            >\r\n              Add to Cart\r\n            </button>\r\n            <br />\r\n          </div>\r\n        </div>\r\n        <div className=\"courseInfo\">\r\n          <strong>CourseInfo:</strong>\r\n          <div className=\"level\">\r\n            <div>\r\n              <strong>Level</strong>\r\n            </div>\r\n            <div>Basic</div>\r\n          </div>\r\n          <hr className=\"horizontalLine\" />\r\n          <div className=\"TotalHours\">\r\n            <div>\r\n              <strong>Duration</strong>\r\n            </div>\r\n            <div>15 Hours</div>\r\n          </div>\r\n          <hr className=\"horizontalLine\" />\r\n          <div className=\"TotalRegStudent\">\r\n            <div>\r\n              <strong>\r\n                Total Regisered\r\n                <br />\r\n                Students\r\n              </strong>\r\n            </div>\r\n            <div>{data.reg_student}</div>\r\n          </div>\r\n          <hr className=\"horizontalLine\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    price: state.cartDetails.price,\r\n    cartId: state.cartDetails.cartId,\r\n    wishlistId: state.cartDetails.wishlistId,\r\n    purchasedCourseId: state.cartDetails.purchasedCourseId,\r\n    wishlist: state.cartDetails.wishlist,\r\n    cart: state.cartDetails.cart,\r\n    TableContent: state.cartDetails.TableContent,\r\n    userId:state.cartDetails.userId,\r\n    Authentication:state.cartDetails.Authentication,\r\n    paidCourseId:state.cartDetails.paidCourseId\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addDetails: (data) => dispatch(actions.addDetails(data)),\r\n    getCartPrice: () => dispatch(actions.calculateCartPrice()),\r\n    addCartDataToServer: (data, id) =>\r\n      dispatch(actions.addCartDataToServer(data, id)),\r\n    getTableContent: (id) => dispatch(actions.getTableContent(id)),\r\n    checkAuthentication:(uid)=> dispatch(actions.checkAuthentication(uid))\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Description);\r\n","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\CourseData.js",["200","201","202","203","204","205","206","207","208"],"import React, { useEffect, useState } from \"react\";\r\nimport \"../css/course-container.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as actions from \"../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport { WarningAlert } from \"./Alert/WarningAlert\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nconst CourseData = (props) => {\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [mainDataSource, setMaindataSource] = useState([]); /*do not change*/\r\n  const [dataSource, setDataSource] = useState([]);\r\n  const [sortBy, setSortBy] = useState(\"\");\r\n  const [filtertBy, setFiltertBy] = useState(\"\");\r\n  const [offSet, setOffSet] = useState(7);\r\n  const [status, setStatus] = useState(\"Loading....\");\r\n  const [price, setPrice] = useState([]);\r\n  const [newComp, setNewComp] = useState(false);\r\n  const [redirectData, setRedirectData] = useState(null);\r\n  const [alertState, setAlertState] = useState(false);\r\n  const [alertMsg, setAlertMsg] = useState(\"\");\r\n  const [noOfResult, setNoOfResult] = useState();\r\n  const [finalPrice, setFinalPrice] = useState(0);\r\n  const { currentUser } = useAuth();\r\n  const [categorisedData,setCategorisedData] = useState([])\r\n  // const [start, setStart] = useState(0);\r\n  // const [end, setEnd] = useState(9);\r\n\r\n  useEffect(() => {\r\n    props.setData(currentUser);\r\n    props.setUserId(currentUser.uid);\r\n    props.getWishlistData(currentUser.uid)\r\n      props.getCartData(currentUser.uid)\r\n    // console.log(props.dataSource);\r\n    props.getPurchasedCourses(props.userId);\r\n    // props.getTableContent(props.userId);\r\n    console.log(\"redirect Data\",redirectData);\r\n    console.log(\"link param\",props.match.params.value);\r\n    // filterName(props.match.params.value)\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    setTimeout(() => {\r\n      \r\n      console.log(\"paid CourseID\",props.paidCourseId);\r\n    }, 3000);\r\n    if(props.match.params.value !== \"all\"){\r\n      console.log(\"called\");\r\n        \r\n        getCategorisedData(props.match.params.value)\r\n      }\r\n\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"main fetched data\",props.dataSource.flat(Infinity));\r\n    setDataSource(props.dataSource);\r\n    setMaindataSource(props.mainDataSource)\r\n    \r\n  }, [props.dataSource]);\r\n  const getCategorisedData = (data) => {\r\n    setCategorisedData([])\r\n    setSearchText(data)\r\n      props.dataSource.map((item)=>{\r\n        let lowerItem = item.category.toLowerCase()\r\n        let lowerData = data.toLowerCase() \r\n        if(lowerItem === lowerData){\r\n          console.log(item);\r\n          setCategorisedData(categorisedData => [...categorisedData, item])\r\n        }\r\n      })\r\n      console.log(categorisedData);\r\n      return setDataSource(categorisedData)\r\n  }\r\n  const handleScroll = (event) => {\r\n    const scrollTop =\r\n      (document.documentElement && document.documentElement.scrollTop) ||\r\n      document.body.scrollTop;\r\n    const scrollHeight =\r\n      (document.documentElement && document.documentElement.scrollHeight) ||\r\n      document.body.scrollHeight;\r\n    // console.log(event.currentTarget)\r\n    // console.log(\"stop\",scrollTop)\r\n    // console.log(\"sheight\",scrollHeight)\r\n    // console.log(\"clientheight\",window.innerHeight)\r\n\r\n    if (scrollTop + window.innerHeight + 10 >= scrollHeight) {\r\n      // console.log(\"start\", start);\r\n      // console.log(\"end\", end);\r\n      // setStatus(\"\");\r\n      // setStart(start+end)\r\n      // setEnd(end+8)\r\n      // props.setData(currentUser, start, end);\r\n      return setOffSet((prev) => prev + 7);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // console.log(\"wishlistId\", props.wishlistId);\r\n  }, [props.wishlistId]);\r\n  // console.log(searchText);\r\n  // useEffect((data) => {}, []);\r\n  // useEffect((searchText)=>{\r\n  //     let filteredData = data.filter((x)=>{\r\n  //         return x.courseName.includes(searchText)\r\n  //     })\r\n  //     return filteredData;\r\n\r\n  // },[searchText])\r\n\r\n  // useEffect(\r\n  //   (data) => {\r\n  //     data.forEach((data) => {\r\n  //       setcourseId((courseId) => courseId.concat(data.courseId));\r\n  //       setcourseName((courseName) => courseName.concat(data.courseName));\r\n  //       setcourseDesc((courseDesc) => courseDesc.concat(data.courseDesc));\r\n  //       setpreReq((preReq) => preReq.concat(data.preReq));\r\n  //       setauthor((author) => author.concat(data.author));\r\n  //       setcategory((category) => category.concat(data.category));\r\n  //       setstatus((status) => status.concat(data.status));\r\n  //       setreg_student((reg_student) => reg_student.concat(data.reg_student));\r\n  //       setcourseImg((courseImg) => courseImg.concat(data.courseImg));\r\n  //       setjoiningDate((joiningDate) => joiningDate.concat(data.joiningDate));\r\n  //       setcoursePrice((coursePrice) => coursePrice.concat(data.price));\r\n  //     });\r\n  //     console.log(\r\n  //       courseId,\r\n  //       courseName,\r\n  //       courseDesc,\r\n  //       preReq,\r\n  //       author,\r\n  //       category,\r\n  //       status,\r\n  //       reg_student,\r\n  //       courseImg,\r\n  //       joiningDate,\r\n  //       coursePrice\r\n  //     );\r\n  //   },\r\n  //   [\r\n  //     author,\r\n  //     category,\r\n  //     courseDesc,\r\n  //     courseId,\r\n  //     courseImg,\r\n  //     courseName,\r\n  //     coursePrice,\r\n  //     joiningDate,\r\n  //     preReq,\r\n  //     reg_student,\r\n  //     status,\r\n  //   ]\r\n  // );\r\n\r\n  const filterName = (value) => {\r\n    setSortBy(\"\")\r\n    setFiltertBy(\"\")\r\n    setCategorisedData([])\r\n    console.log(value);\r\n    if (value < 1) {\r\n      setSearchText(\"\");\r\n      setNoOfResult(0);\r\n      return setDataSource(mainDataSource);\r\n    } else {\r\n      console.log(value);\r\n      setSearchText(value.toLowerCase());\r\n      let filteredData = mainDataSource.filter((x) => {\r\n        let lowerString_coursename = x.courseName.toLowerCase();\r\n        let lowerString_category = x.category.toLowerCase();\r\n\r\n        return (\r\n          lowerString_coursename.includes(searchText) ||\r\n          lowerString_category.includes(searchText)\r\n        );\r\n      });\r\n      setNoOfResult(filteredData.length);\r\n      // console.log(filteredData.length);\r\n      // console.log(filteredData);\r\n      return setDataSource(filteredData);\r\n    }\r\n  };\r\n  const courseDescription = (e, coursename, courseid) => {\r\n    // e.preventDefault()\r\n    window.open(`http://localhost:3000/desc/${coursename}`, \"_blank\");\r\n    console.log(e);\r\n    console.log(courseid);\r\n\r\n    console.log(\"value\", e.target.value);\r\n\r\n    return console.log(e.target);\r\n  };\r\n  const addToWishlistDirectly = (index, id, data) => {\r\n    console.log(props.cartId);\r\n    if(props.paidCourseId.includes(id)){\r\n      setAlertState(true);\r\n      setAlertMsg(\"Course Already Purchased, Please Check Your My-Learning tab\");\r\n    }\r\n    else{\r\n\r\n      if (props.cartId.includes(id)) {\r\n        setAlertState(true);\r\n        setAlertMsg(\"Course Already Added in Cart\");\r\n      } else if (props.purchasedCourseId.includes(id)) {\r\n        setAlertState(true);\r\n        setAlertMsg(\r\n          \"Course Already Purchased, Please Check Your My-Learning tab\"\r\n        );\r\n      } else {\r\n        if (props.wishlistId.includes(id)) {\r\n          setAlertState(true);\r\n          setAlertMsg(\"Course Already Added in Wishlist\");\r\n        } else {\r\n          setAlertState(false);\r\n          props.moveToWishlist(index);\r\n          props.addToWishlistDirectly(id);\r\n          props.addWishListDataToServer(data, props.userId);\r\n        }\r\n    }\r\n\r\n    }\r\n    return true;\r\n  };\r\n  const filterStack = (value) => {\r\n    setNoOfResult(0);\r\n    setSearchText(\"\")\r\n    let filterStack_data = mainDataSource.filter((x) => {\r\n      return x.category === value;\r\n    });\r\n\r\n    if (filterStack_data.length < 0) {\r\n      setDataSource(mainDataSource);\r\n    } else {\r\n      setSortBy(\"\");\r\n      setFiltertBy(value);\r\n      return setDataSource(filterStack_data);\r\n    }\r\n  };\r\n\r\n  const handleClick = (e, course_price, index, data, id) => {\r\n    console.log(\"button clicked\");\r\n    console.log(id);\r\n    console.log(props.paidCourseId);\r\n    console.log(props.paidCourseId.includes(id));\r\n    if(props.paidCourseId.includes(id)){\r\n      setAlertState(true);\r\n      setAlertMsg(\"Course Already Purchased, Please Check Your My-Learning tab\");\r\n    }\r\n    else{\r\n      if (props.price < 10000 ) {\r\n        // setPrice([...price, course_price]);\r\n        // let sum = price.reduce((a, b) => {\r\n        //   return a + b;\r\n        // }, 0);\r\n        // setFinalPrice(sum);\r\n       \r\n        if (props.cartId.includes(id)) {\r\n          setAlertState(true);\r\n          setAlertMsg(\"Course Already Added in Cart\");\r\n        } else if (props.purchasedCourseId.includes(id)) {\r\n          setAlertState(true);\r\n          setAlertMsg(\r\n            \"Course Already Purchased, Please Check Your My-Learning tab\"\r\n          );\r\n        } else {\r\n          setAlertState(false);\r\n          props.addDetails(data);\r\n          props.getCartPrice();\r\n          props.addCartDataToServer(data, props.userId);\r\n        }\r\n      } else if (props.price > 10000 && props.cartId.includes(id)) {\r\n        setAlertState(true);\r\n        setAlertMsg(\"Limit Reached and Course Already Added in Cart\");\r\n      } else {\r\n        setAlertState(true);\r\n        setAlertMsg(\"Limit Reached\");\r\n      }\r\n    }\r\n    \r\n    setTimeout(() => {\r\n      setAlertState(false);\r\n    }, 4000);\r\n    console.log(price);\r\n    console.log(index);\r\n    console.log(dataSource[index].courseDesc);\r\n    // setDataSource(dataSource.slice(index,1))\r\n    // price.reduce(sum)\r\n  };\r\n  const getCourseDesc = (e, data) => {\r\n    e.preventDefault();\r\n    console.log(e);\r\n    console.log(data);\r\n    setRedirectData(data);\r\n    return true;\r\n  };\r\n  const LoadData = (props) => {\r\n    // console.log(\"in load data\");\r\n    // console.log(props.data.length);\r\n    return (\r\n      // <InfiniteScroll\r\n      // dataLength={props.data.length}\r\n      // hasMore={true}\r\n      // loader={<h4>Loading...</h4>}\r\n      // endMessage={\r\n      //   <p style={{ textAlign: 'center' }}>\r\n      //     <b>Yay! You have seen it all</b>\r\n      //   </p>\r\n      // }\r\n      // >\r\n      // {\r\n\r\n      props.data.map((data, i) => (\r\n        <div\r\n          className=\"course-container\"\r\n          // onClick={(e) => {\r\n          //   courseDescription(e, data.courseName, data.courseId);\r\n          // }}\r\n        >\r\n          <div className=\"course_data\" value={data.courseId}>\r\n            <img\r\n              alt=\"course-img\"\r\n              src={data.courseImg}\r\n              value={data.courseId}\r\n              onClick={(e) => {\r\n                getCourseDesc(e, data);\r\n              }}\r\n            />\r\n            <div className=\"courseName\" value={data.courseId}>\r\n              {data.courseName}\r\n            </div>\r\n            <div className=\"price_data\" value={data.courseId}>\r\n              <img\r\n                alt=\"price\"\r\n                className=\"price_tag\"\r\n                src=\"../img/price.png\"\r\n                value={data.courseId}\r\n              />\r\n              &nbsp;\r\n              <div className=\"price\" value={data.courseId}>\r\n                {data.price}/-\r\n              </div>\r\n            </div>\r\n            <div className=\"buttonWrapper\">\r\n              <button\r\n                className=\"price_btn\"\r\n                onClick={(e) =>\r\n                  handleClick(e, data.price, i, data, data.courseId)\r\n                }\r\n              >\r\n                Add to Cart\r\n              </button>\r\n              <div className=\"wishlistIconContainer\">\r\n                <i\r\n                  className=\"fa fa-heart wishlistIcon\"\r\n                  title=\"wishlist\"\r\n                  onClick={() => addToWishlistDirectly(i, data.courseId, data)}\r\n                ></i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))\r\n      // }</InfiniteScroll>\r\n    );\r\n  };\r\n  const getSorted_list = () => {\r\n    let sorted_Course = [];\r\n    dataSource.forEach((data) => {\r\n      sorted_Course.push({\r\n        courseId: data.courseId,\r\n        courseName: data.courseName,\r\n        courseDesc: data.courseDesc,\r\n        preReq: data.preReq,\r\n        author: data.author,\r\n        category: data.category,\r\n        status: data.status,\r\n        reg_student: data.reg_student,\r\n        courseImg: data.courseImg,\r\n        joiningDate: data.joiningDate,\r\n        price: data.price,\r\n      });\r\n    });\r\n    return sorted_Course;\r\n  };\r\n  const sortCourse = (value) => {\r\n    setNoOfResult(0);\r\n    setSearchText(\"\")\r\n    let sorted_Course = [];\r\n    if (value === \"recent\") {\r\n    } else if (value === \"asce\") {\r\n      sorted_Course = [...getSorted_list()];\r\n      console.log(sorted_Course);\r\n      setSortBy(\"Title A to Z\");\r\n      sorted_Course.sort((a, b) => {\r\n        if (a.courseName.toLowerCase() < b.courseName.toLowerCase()) return -1;\r\n\r\n        console.log(a, b);\r\n        if (a.courseName.toLowerCase() > b.courseName.toLowerCase()) return 1;\r\n\r\n        return 0;\r\n      });\r\n      console.log(sorted_Course);\r\n      setDataSource(sorted_Course);\r\n    } else if (value === \"desc\") {\r\n      sorted_Course = [...getSorted_list()];\r\n      console.log(sorted_Course);\r\n      setSortBy(\"Title Z to A\");\r\n\r\n      sorted_Course.sort((a, b) => {\r\n        if (a.courseName.toLowerCase() > b.courseName.toLowerCase()) return -1;\r\n\r\n        console.log(a, b);\r\n        if (a.courseName.toLowerCase() < b.courseName.toLowerCase()) return 1;\r\n\r\n        return 0;\r\n      });\r\n      console.log(sorted_Course);\r\n      setDataSource(sorted_Course);\r\n    } else if (value === \"price_l_h\") {\r\n      sorted_Course = [...getSorted_list()];\r\n      sorted_Course.sort((a, b) => a.price - b.price);\r\n      setDataSource(sorted_Course);\r\n      setSortBy(\"Price: Low to High\");\r\n\r\n      console.log(sorted_Course);\r\n    } else if (value === \"price_h_l\") {\r\n      sorted_Course = [...getSorted_list()];\r\n      sorted_Course.sort((a, b) => b.price - a.price);\r\n      console.log(sorted_Course);\r\n      setDataSource(sorted_Course);\r\n      setSortBy(\"Price: High to Low\");\r\n    }\r\n    return console.log(\"sorting done\");\r\n  };\r\n  const resetData = () => {\r\n    setSearchText(\"\");\r\n    setSortBy(\"\");\r\n    setFiltertBy(\"\");\r\n    setOffSet(9);\r\n    setPrice([]);\r\n    setFinalPrice(0);\r\n    props.reset();\r\n    setStatus(\"Loading...\");\r\n    return setDataSource(mainDataSource);\r\n  };\r\n  // const checkAndUpdate = (e,value) =>{\r\n  //   if(e.keyCode===8){\r\n  //     if(value<1){\r\n  //       setDataSource(mainDataSource)\r\n  //     }\r\n  //     alert(\"backspace\")\r\n\r\n  //   } else{\r\n  //     filterName(value)\r\n  //   }\r\n  // }\r\n  // const handleScroll = (event) =>{\r\n  //   const {scrollTop, clientHeight, scrollHeight,} = event.currentTarget;\r\n  //   console.log(\"stop\",scrollTop)\r\n  //   console.log(\"client\",clientHeight)\r\n  //   console.log(\"sheight\",scrollHeight)\r\n\r\n  // }\r\n  let CourseList = null;\r\n  if (dataSource.length > 0) {\r\n\r\n    CourseList = (\r\n      <LoadData\r\n        data={categorisedData.length>1 ? categorisedData : dataSource.slice(0, offSet)}\r\n        // data={dataSource}\r\n      />\r\n    );\r\n  } else {\r\n    CourseList = <div className=\"white\">Loading..............</div>;\r\n  }\r\n  return (\r\n    <div className=\"main_Container\">\r\n      {alertState ? <WarningAlert msg={alertMsg} /> : null}\r\n      {redirectData ? (\r\n        <Redirect\r\n          to={{\r\n            pathname: `/Course_Description/${redirectData.courseId}`,\r\n            state: { data: redirectData },\r\n          }}\r\n        />\r\n      ) : null}\r\n      <div className=\"container\">\r\n        {/* {props.price} */}\r\n        <div className=\"nav-container\">\r\n          <div className=\"sort\">\r\n            <div className=\"dropdown\">\r\n              Sort by :{sortBy}\r\n              <div\r\n                className=\"dropdown-content\"\r\n                onClick={(e) => {\r\n                  sortCourse(e.target.value);\r\n                }}\r\n              >\r\n                <button value=\"recent\">Recently Enrolled</button>\r\n                <button value=\"asce\">Title: A to Z</button>\r\n                <button value=\"desc\">Title: Z to A</button>\r\n                <button value=\"price_l_h\">Price: Low to High</button>\r\n                <button value=\"price_h_l\">Price: Hight to Low</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"filter\">\r\n            <div className=\"dropdown\">\r\n              Filter by: {filtertBy}\r\n              <div\r\n                className=\"dropdown-content\"\r\n                onClick={(e) => {\r\n                  filterStack(e.target.value);\r\n                }}\r\n              >\r\n                <button value=\"frontend\">Frontend</button>\r\n                <button value=\"backend\">Backend</button>\r\n                <button value=\"fullstack\">Fullstack</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {noOfResult ? (\r\n            <>\r\n              <div className=\"searchResult\">\r\n                {noOfResult}\r\n                <small>Results for </small> <q>{searchText}</q>\r\n              </div>\r\n            </>\r\n          ) : null}\r\n          <div className=\"reset\" onClick={props.reset}>\r\n            <img\r\n              alt=\"reset_filter\"\r\n              src=\"../img/refresh.png\"\r\n              title=\"Reset Filters\"\r\n            />\r\n          </div>\r\n\r\n          <div style={{ backgroundColor: \"transparent\" }}>\r\n            <input\r\n              autoFocus\r\n              className=\"search_course\"\r\n              value={searchText}\r\n              required\r\n              name=\"\"\r\n              type=\"search\"\r\n              placeholder=\"Search Course Here\"\r\n              onChange={(e) => filterName(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"course-list\" onScroll={handleScroll}>\r\n        {/* {data.map((data, i) => (\r\n          <div className=\"course-container\">\r\n            <div className=\"course_data\">\r\n                <img alt=\"course-img\" src={data.courseImg} />\r\n              <div className=\"courseName\">{data.courseName}</div>\r\n              <div className=\"price_data\">\r\n                <img alt=\"price\" className=\"price_tag\" src=\"../img/price.png\" />\r\n                &nbsp;\r\n                <div className=\"price\">{data.price}/-</div>\r\n              </div>\r\n              <button className=\"price_btn\">Add to Cart</butto  n>\r\n            </div>\r\n          </div>\r\n        ))} */}\r\n        {/* {categorisedData ? } */}\r\n        {CourseList}\r\n        {/* <div style={{color:\"white\"}}>\r\n        {status}\r\n        </div> */}\r\n\r\n        {/* {LoadData(data)} */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    price: state.cartDetails.price,\r\n    mainDataSource: state.cartDetails.mainDataSource,\r\n    dataSource: state.cartDetails.dataSource,\r\n    cartId: state.cartDetails.cartId,\r\n    wishlistId: state.cartDetails.wishlistId,\r\n    userId: state.cartDetails.userId,\r\n    currentUser: state.cartDetails.currentUser,\r\n    purchasedCourseId: state.cartDetails.purchasedCourseId,\r\n    wishlist: state.cartDetails.wishlist,\r\n    cart: state.cartDetails.cart,\r\n    paidCourseId:state.cartDetails.paidCourseId\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addDetails: (data) => dispatch(actions.addDetails(data)),\r\n    reset: () => dispatch(actions.resetData()),\r\n    getCartPrice: () => dispatch(actions.calculateCartPrice()),\r\n   getWishlistData:(id)=> dispatch(actions.getWishlistData(id)),\r\n   getCartData:(id)=>dispatch(actions.getCartData(id)),\r\n    moveToWishlist: (i) => dispatch(actions.moveToWishlist(i)),\r\n    addToWishlistDirectly: (id) => dispatch(actions.addToWishlistDirectly(id)),\r\n    setData: (currentUser, start, end) =>\r\n      dispatch(actions.setData(currentUser, start, end)),\r\n    getPurchasedCourses: (id) => dispatch(actions.getPurchasedCourses(id)),\r\n    setUserId: (id) => dispatch(actions.setUserId(id)),\r\n    storeWishlistData: (data, id) =>\r\n      dispatch(actions.storeWishlistData(data, id)),\r\n    addWishListDataToServer: (data, id) =>\r\n      dispatch(actions.addWishListDataToServer(data, id)),\r\n    addCartDataToServer: (data, id) =>\r\n      dispatch(actions.addCartDataToServer(data, id)),\r\n    getTableContent: (id) => dispatch(actions.getTableContent(id)),\r\n\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CourseData);\r\n","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\Registration.js",[],"D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\container\\PrivateRoutes.js",["209"],"import React from \"react\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { Alert } from \"../component/Alert/Alert\";\r\nfunction PrivateRoutes({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth();\r\n  console.log(currentUser ? currentUser.uid : null)\r\n  const obj = {\r\n    ...rest\r\n  }\r\n  return (\r\n    <div>\r\n      <Route\r\n        {...rest}\r\n        render={ props => {\r\n          return  currentUser ? (\r\n            <Component {...props} />\r\n          ) : (\r\n            <div>\r\n              <Alert msg={obj.msg}/>\r\n              {/* <Redirect to=\"/Login\" /> */}\r\n            </div>\r\n          );\r\n        }}\r\n      ></Route>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrivateRoutes;\r\n ","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\dashboard\\Dashboard.js",["210","211"],"import React, { useState,useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./dashboard.css\"\r\nimport { SuccessAlert } from \"../Alert/SuccessAlert\";\r\nfunction Dashboard(props) {\r\n  const { currentUser, logout } = useAuth();\r\n  const [alertCss, setAlertCss] = useState(\"danger\");\r\n  const [error, setError] = useState();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if(!window.sessionStorage.getItem(\"user\")){\r\n      let today = new Date();\r\n      \r\n      let seconds = today.getSeconds()\r\n      if(seconds<10){\r\n        seconds = '0'+seconds\r\n      }\r\n      let minutes = today.getMinutes();\r\n      if(minutes<10){\r\n        minutes = '0'+minutes\r\n      }\r\n      let hour = today.getHours();\r\n      if(hour<10){\r\n        hour = '0'+hour\r\n      }\r\n      let timeOnly = hour +':' +minutes+ ':' + seconds;\r\n      props.AddMsgToNotificationList(\"Login Successfully\",timeOnly)\r\n    }\r\n    if(currentUser){\r\n      props.setUserId(currentUser.uid)\r\n      if(props.formatState){\r\n        props.setFormat(currentUser.uid)\r\n      }\r\n      console.log(props.toastState);\r\n      props.setFormateState()\r\n      props.getWishlistData(currentUser.uid)\r\n      props.getCartData(currentUser.uid)\r\n      setTimeout(() => {\r\n        props.setToast()\r\n      }, 1000);\r\n      setTimeout(() => {\r\n    window.sessionStorage.setItem(\"user\", \"set\");\r\n      }, 5000);\r\n      \r\n    }\r\n  }, [])\r\n  setTimeout(() => {\r\n    console.log(\"current uSer\",currentUser)\r\n    console.log(props.formatState)\r\n\r\n  }, 1000);\r\n  async function handleLogout() {\r\n    setError(\"\");\r\n    try {\r\n      await logout();\r\n    window.sessionStorage.setItem(\"user\", \"\");\r\n\r\n      history.push(\"/Login\");\r\n    } catch {\r\n      setError(\"Failed to Logout\");\r\n    }\r\n  }\r\n  let currentUser_email = currentUser ? `Welcome ${currentUser.email}` : null\r\n  return (\r\n    <div className=\"dashboard_container\">\r\n      <div className=\"main_dashboard\">\r\n      \r\n      {window.sessionStorage.getItem(\"user\") ?  null : <SuccessAlert msg={currentUser_email} />}\r\n      <div>\r\n      {error && <div className={alertCss}>{error}</div>}\r\n      Profile:\r\n      </div>\r\n      <div className=\"success\">Welcome {currentUser?.email} </div>\r\n      <div className=\"update-btn\">\r\n        <Link to=\"/Update-profile\">Update Profile</Link>\r\n      </div>\r\n      <button onClick={handleLogout} className=\"logout-btn \">\r\n        Logout\r\n      </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = state =>{\r\n  return{\r\n      details:state.cartDetails.price,\r\n    userId:state.cartDetails.userId,\r\n    currentUser:state.cartDetails.currentUser,\r\n    toastState: state.cartDetails.toastState,\r\n    formatState:state.cartDetails.formatState,\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch =>{\r\n  return{\r\n    change:(e)=> dispatch(actions.addDetails(e.target.value)),\r\n    setData:(res)=>dispatch(actions.setData(res)),\r\n   setUserId:(id)=>dispatch(actions.setUserId(id)),\r\n   getWishlistData:(id)=> dispatch(actions.getWishlistData(id)),\r\n   setFormat:(id)=>dispatch(actions.setFormat(id)),\r\n   setFormateState:()=>dispatch(actions.setFormateState()),\r\n    setToast:()=>dispatch(actions.setToast()),\r\n    getCartData:(id)=>dispatch(actions.getCartData(id)),\r\n    AddMsgToNotificationList:(msg,time)=>dispatch(actions.AddMsgToNotificationList(msg,time))\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Dashboard);\r\n\r\n","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\container\\signup\\signup.js",["212","213","214","215","216"],"import React, { Component, useRef, useState,useEffect } from \"react\";\r\nimport \"./signup.css\";\r\nimport { NavLink, Redirect, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nfunction Signup(props) {\r\n  console.log(\"component rendered\")\r\n  // const [isVerified, setisVerified] = useState(true);\r\n  // const [name, setName] = useState();\r\n  // const [email, setEmail] = useState();\r\n  // const [password, setPassword] = useState();\r\n  // const [confirmPassword, setConfirmPassword] = useState();\r\n  const [alertCss, setAlertCss] = useState(\"danger\");\r\n  const [error,setError] = useState(\"\")\r\n  const [loading,setLoading] = useState(false)\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { signup, currentUser } = useAuth();\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    if(currentUser){\r\n      props.setUserId(props.userId)\r\n    }\r\n  }, [])\r\n  async function handleSubmit (e) {\r\n    e.preventDefault();\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n    try{\r\n      setError(\"\")\r\n      setLoading(true)\r\n      await signup(emailRef.current.value,passwordRef.current.value)\r\n      history.push(\"/Dashboard\")\r\n    }catch{\r\n    \r\n      \r\n      setError(\"Failed to create an Account\")\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  \r\n\r\n\r\n// const changeHandler = (event) => {\r\n//   this.setState({\r\n//     ...this.state,\r\n//     [event.target.name]: event.target.value,\r\n//   });\r\n// };\r\n// const clickHandler = (event) => {\r\n//   event.preventDefault();\r\n//   console.log(\"clicked\");\r\n//   console.log(this.state);\r\n//   //   let url =\r\n//   //   \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBpQR3y5e27axRcJHY9bjX8c2w5G-dpy_4\"\r\n\r\n//   let url =\r\n//     \"https://e-learning-2020-2021-default-rtdb.firebaseio.com/signupdata.json\";\r\n//   if (this.state.isVerified) {\r\n//     axios\r\n//       .post(url, this.state)\r\n//       .then((res) => {\r\n//         console.log(res);\r\n//         alert(\"you signup\");\r\n//         <Redirect to=\"/Registration\" />;\r\n//         console.log(\"data posted\");\r\n//       })\r\n//       .catch((error) => {\r\n//         console.log(error);\r\n//       });\r\n//   } else {\r\n//     alert(\"Please Verify yourself\");\r\n//   }\r\n// };\r\nconsole.log(\"rendered\")\r\nreturn (\r\n  <div className=\"Signup\">\r\n    <div className=\"title\">\r\n      <h2>\r\n        <strong className=\"white\">Sign Up and Start Learning!</strong>\r\n      </h2>\r\n      <hr className=\"line\" />\r\n    </div>\r\n    {error && <div className={alertCss}>{error}</div>}\r\n    <div className=\"form-details\">\r\n      <form onSubmit={handleSubmit}> \r\n        {/* <div className=\"container\">\r\n              <label className=\"container-label\">\r\n                <img src=\"../img/fname_1.png\" alt=\"first name\" />\r\n              </label>\r\n              <input\r\n                \r\n                name=\"name\"\r\n                type=\"text\"\r\n                className=\"container-input\"\r\n                placeholder=\"Enter Your Name\"\r\n                value={this.state.name}\r\n                onChange={this.changeHandler}\r\n              />\r\n            </div> */}\r\n\r\n        <div className=\"container\">\r\n          <label className=\"container-label\">\r\n            <img src=\"../img/email_1.png\" alt=\"email\" />\r\n          </label>\r\n          <input\r\n            ref={emailRef}\r\n            name=\"email\"\r\n            required\r\n            type=\"email\"\r\n            className=\"container-input\"\r\n            placeholder=\"Enter Email\"\r\n          />\r\n        </div>\r\n        <div className=\"container\">\r\n          <label className=\"container-label\">\r\n            <img src=\"../img/password_1.png\" alt=\"password\" />\r\n          </label>\r\n          <input\r\n            ref={passwordRef}\r\n            name=\"password\"\r\n            required\r\n            autoComplete=\"true\"\r\n            type=\"password\"\r\n            className=\"container-input\"\r\n            placeholder=\"Enter Password\"\r\n          />\r\n        </div>\r\n        {/* testing */}\r\n        <div className=\"container\">\r\n          <label className=\"container-label\">\r\n            <img src=\"../img/password_1.png\" alt=\"confirm password\" />\r\n          </label>\r\n          <input\r\n            ref={passwordConfirmRef}\r\n            name=\"confirm_password\"\r\n            required\r\n            autoComplete=\"true\"\r\n            type=\"password\"\r\n            className=\"container-input\"\r\n            placeholder=\"Confirm Password\"\r\n          />\r\n        </div>\r\n        {/* testing */}\r\n\r\n        <div className=\"container\">\r\n          <button  disabled={loading} className=\"signup-btn\">\r\n            SignUp\r\n          </button>\r\n        </div>\r\n        <div className=\"container\">\r\n          <p className=\"white\">\r\n            Already have an account?{\" \"}\r\n            <strong>\r\n              <NavLink to=\"/Login\">LogIn</NavLink>\r\n            </strong>\r\n          </p>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n);\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userId:state.cartDetails.userId\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n   setUserId:(id)=>dispatch(actions.setUserId(id)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\r\n","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\Update_Profile\\UpdateProfile.js",["217","218","219"],"import React, { Component, useRef, useState } from \"react\";\r\n\r\nimport { NavLink, Redirect, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nfunction UpdateProfile(props) {\r\n  console.log(\"component rendered\")\r\n  \r\n  const [alertCss, setAlertCss] = useState(\"danger\");\r\n  const [error,setError] = useState(\"\")\r\n  const [loading,setLoading] = useState(false)\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const passwordConfirmRef = useRef()\r\n  const { currentUser, updateEmail, updatePassword } = useAuth();\r\n  const history = useHistory()\r\n  const [msg,setMsg] = useState('')\r\n  \r\n   function handleSubmit (e) {\r\n    e.preventDefault();\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n    const promises = []\r\n    setLoading(true)\r\n    setError('')\r\n    if(emailRef.current.value !== currentUser.email){\r\n        promises.push(updateEmail(emailRef.current.value))\r\n        setAlertCss(\"success\")\r\n        setMsg(\"Details Updated\")\r\n    }\r\n    if(passwordRef.current.value){\r\n        promises.push(updatePassword(passwordRef.current.value))\r\n        setAlertCss(\"success\")\r\n        setMsg(\"Details Updated\")\r\n\r\n    }\r\n    Promise.all(promises).then(()=>{\r\n      console.log(Promise)\r\n      setTimeout(()=>{\r\n        history.push(\"/Login\")\r\n      },1000)\r\n    \r\n    }).catch(error => {\r\n        setError(\"Failed to update details\")\r\n    }).finally(()=>{\r\n        setLoading(false)\r\n    })\r\n    \r\n  }\r\nconsole.log(\"rendered\")\r\nreturn (\r\n  <div className=\"Signup\">\r\n    <div className=\"title\">\r\n      <h2>\r\n        <strong className=\"white\">Update-Profile</strong>\r\n      </h2>\r\n      <hr className=\"line\" />\r\n    </div>\r\n    {msg &&  <div className={alertCss}>{msg}</div>}\r\n    {error && <div className={alertCss}>{error}</div>}\r\n    <div className=\"form-details\">\r\n      <form  onSubmit={handleSubmit}> \r\n\r\n        <div className=\"container\">\r\n          <label className=\"container-label\">\r\n            <img src=\"../img/email_1.png\" alt=\"email\" />\r\n          </label>\r\n          <input\r\n            ref={emailRef}\r\n            name=\"email\"\r\n            required\r\n            type=\"email\"\r\n            defaultValue={currentUser.email}\r\n            className=\"container-input\"\r\n          />\r\n        </div>\r\n        <div className=\"container\">\r\n          <label className=\"container-label\">\r\n            <img src=\"../img/password_1.png\" alt=\"password\" />\r\n          </label>\r\n          <input\r\n            ref={passwordRef}\r\n            name=\"password\"\r\n            \r\n            autoComplete=\"true\"\r\n            type=\"password\"\r\n            className=\"container-input\"\r\n            placeholder=\"Leave blank to keep the same\"\r\n          />\r\n        </div>\r\n        {/* testing */}\r\n        <div className=\"container\">\r\n          <label className=\"container-label\">\r\n            <img src=\"../img/password_1.png\" alt=\"confirm password\" />\r\n          </label>\r\n          <input\r\n            ref={passwordConfirmRef}\r\n            name=\"confirm_password\"\r\n            \r\n            autoComplete=\"true\"\r\n            type=\"password\"\r\n            className=\"container-input\"\r\n            placeholder=\"Leave blank to keep the same\"\r\n          />\r\n        </div>\r\n        {/* testing */}\r\n\r\n        <div className=\"container\">\r\n          <button disabled={loading} className=\"signup-btn\">\r\n            Update\r\n          </button>\r\n        </div>\r\n        <div className=\"container\">\r\n          <p>\r\n            \r\n            <strong className=\"white\">\r\n              <NavLink to=\"/\">Cancel</NavLink>\r\n            </strong>\r\n          </p>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n);\r\n}\r\nexport default UpdateProfile;\r\n","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\container\\login\\Login.js",["220","221","222","223","224"],"import React, { useRef, useState,useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { ADD_PRICE } from \"../../store/actions/actionTypes\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport axios from \"../../axios-order\"\r\nfunction Login(props) {\r\n  const [alertCss, setAlertCss] = useState(\"danger\");\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const { login,currentUser } = useAuth();\r\n  const history = useHistory();\r\n  \r\n  \r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await login(emailRef.current.value, passwordRef.current.value);\r\n      history.push(\"/Dashboard\");\r\n\r\n    } catch {\r\n      setError(\"Failed to Login\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n  setTimeout(() => {\r\n    console.log(\"login \",props.userId)\r\n  }, 1000);\r\n  return (\r\n    <div className=\"Login\">\r\n      <div className=\"title\">\r\n        <h2>\r\n          <strong className=\"white\">Log In to your E-Learning Account</strong>\r\n        </h2>\r\n        <hr className=\"line\" />\r\n      </div>\r\n      {error && <div className={alertCss}>{error}</div>}\r\n      <div className=\"form-details\">\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"container\">\r\n            <label className=\"container-label\">\r\n              <img src=\"../img/email_1.png\" alt=\"email\" />\r\n            </label>\r\n            <input\r\n              ref={emailRef}\r\n              name=\"email\"\r\n              required\r\n              type=\"email\"\r\n              className=\"container-input\"\r\n              placeholder=\"Enter Email\"\r\n            />\r\n          </div>\r\n          <div className=\"container\">\r\n            <label className=\"container-label\">\r\n              <img src=\"../img/password_1.png\" alt=\"password\" />\r\n            </label>\r\n            <input\r\n              ref={passwordRef}\r\n              name=\"password\"\r\n              required\r\n              autoComplete=\"true\"\r\n              type=\"password\"\r\n              className=\"container-input\"\r\n              placeholder=\"Enter Password\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"container\">\r\n            <button disabled={loading} className=\"signup-btn\">\r\n              LogIn\r\n            </button>\r\n          </div>\r\n          <div className=\"container\">\r\n            <p>\r\n              {\" \"}\r\n              <strong>\r\n                <NavLink to=\"/Forgot_Password\" className=\"forgot_password white\">\r\n                  Forgot Password?\r\n                </NavLink>\r\n              </strong>\r\n            </p>\r\n          </div>\r\n          <div className=\"container\">\r\n            <p className=\"white\">\r\n              Don't have an account?{\" \"}\r\n              <strong>\r\n                <NavLink to=\"/Signup\">SignUp</NavLink>\r\n              </strong>\r\n            </p>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = state =>{\r\n  return{\r\n      details:state.cartDetails.price,\r\n    userId:state.cartDetails.userId\r\n\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch =>{\r\n  return{\r\n    change:(e)=> dispatch(actions.addDetails(e.target.value)),\r\n    setData:(res)=>dispatch(actions.setData(res)),\r\n   setUserId:(id)=>dispatch(actions.setUserId(id)),\r\n\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Login);\r\n","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\container\\forgot_password\\Forgot_password.js",[],"D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\Workshop\\WorkshopList.js",["225","226","227","228","229","230","231","232","233"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./WorkshopList.css\"\r\nimport data from \"../../workshopData.json\"\r\nimport { Link } from \"react-router-dom\";\r\nfunction WorkshopList(props) {\r\n  const [mainDataSource, setMaindataSource] = useState(data); /*do not change*/\r\n  const [dataSource, setDataSource] = useState(data);\r\n  const [imgcss,setImgcss] = useState(\"topic-logo odd\")\r\n  const [regcss,setRegcss] = useState(\"reg-icon-odd\")\r\n  const [test,setTest] = useState(false)\r\n  const LoadData = (props) =>{\r\n    const check = (i) =>{\r\n      if(i%2 === 0){\r\n        // console.log(\"inside if\")\r\n        // console.log(\"old\",imgcss)\r\n\r\n        //   setImgcss(\"topic-logo even\")\r\n        //   console.log(imgcss)\r\n        //   setRegcss(\"reg-icon-even\")\r\n        setTest(true)\r\n        }\r\n    }\r\n    return(\r\n      props.data.map((data,i)=>{\r\n        console.log(\"old\",i)\r\n        check(i)\r\n        console.log(i)\r\n        \r\n        return (\r\n          <div className=\"topic-com\">\r\n            \r\n          <div \r\n          // className={ test ? \"topic-logo even\" : \"topic-logo odd\"}\r\n          className=\"topic-logo\"\r\n          >\r\n            <img src={data.workshopImg} alt=\"\" />\r\n          </div>\r\n          <div className=\"workshopTitle\">\r\n            <h1>{data.workshoptitle}</h1>\r\n          <div className=\"instructor\">\r\n            <div className=\"instructor-img\">\r\n                <img src={data.instructorImg} alt=\"instructor\" />\r\n            </div>\r\n            <div className=\"instructor-details\">\r\n                {data.workshopBy}<br/>\r\n                <div className=\"instructorPosition\">\r\n                {data.instructorPosition}\r\n                </div>\r\n            </div>\r\n           \r\n          </div>\r\n          <div className=\"workshopDesc\">\r\n            <p>{data.workshopDesc}</p>\r\n          </div>\r\n          <div className= \"reg-icon\" title=\"Register for Angular\">\r\n            <Link to=\"/Registration\">\r\n              <button className=\"Workshop-Reg-btn\">Register Now</button>\r\n            </Link>\r\n          </div>\r\n            </div>\r\n          {/* <div className={ test ? \"reg-icon-even\" : \"reg-icon-odd\"} title=\"Register for Angular\">\r\n            <Link to=\"/Registration\">\r\n              <button className=\"RegisterButton\">Register Now</button>\r\n            </Link>\r\n          </div> */}\r\n        </div>\r\n        )\r\n      })\r\n    )\r\n  }\r\n  return (\r\n    <div>\r\n      <section>\r\n        <div className=\"body-1\">\r\n          <div className=\"nav-first\">\r\n            <div className=\"Workshop-Title\">Workshop Station</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"Listcard\"> \r\n        <LoadData data={dataSource}/>\r\n\r\n        </div>\r\n        {/* <div class=\"topic-com one\">\r\n          <div class=\"topic-logo even \">\r\n            <img src=\"img/angular-2.png\" alt=\"\" />\r\n          </div>\r\n\r\n          <div class=\"reg-icon-even\" title=\"Register for Angular\">\r\n            <Link to=\"/Registration\">\r\n              <img src=\"img/reg-icon-1.png\" alt=\"\" />\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div class=\"topic-com two\">\r\n          <div class=\"topic-logo odd\">\r\n            <img src=\"img/react-1.png\" alt=\"\" />\r\n          </div>\r\n          <div class=\"reg-icon-odd\" title=\"Register for React\">\r\n            <Link to=\"/Registration\">\r\n              <img src=\"img/reg-icon-2.png\" alt=\"\" />\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div class=\"topic-com three\">\r\n          <div class=\"topic-logo even\">\r\n            <img src=\"img/vue-1.png\" alt=\"\" />\r\n          </div>\r\n          <div class=\"reg-icon-even\" title=\"Register for Vue\">\r\n            <Link to=\"/Registration\">\r\n              <img src=\"img/reg-icon-3.png\" alt=\"\" />\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div class=\"topic-com four\" style={{marginBottom: \"20px\"}}>\r\n          <div class=\"topic-logo odd\">\r\n            <img src=\"img/node-1.png\" alt=\"\" />\r\n            \r\n          </div>\r\n          <div class=\"reg-icon-odd\" title=\"Register for Node\">\r\n            <Link to=\"/Registration\">\r\n              <img src=\"img/reg-icon-4.png\" alt=\"\" />\r\n            </Link>\r\n          </div>\r\n        </div> */}\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WorkshopList;\r\n","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\checkout\\checkout.js",["234","235","236"],"import React, { Component, useEffect } from \"react\";\r\nimport \"./Checkout.css\";\r\nimport data from \"../../data.json\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport LoadData from \"./LoadData\";\r\nimport { SuccessAlert } from \"../Alert/SuccessAlert\";\r\nclass Checkout extends Component {\r\n  state = {\r\n    finalCart: { cart: null, userId: \"\",wishlist:[]},\r\n  };\r\n  \r\n  componentDidMount() {\r\n    // this.props.setData()\r\n    console.log(this.props.dataSource);\r\n    console.log(this.props.userId);\r\n    console.log(\"toast\", this.props.toast);\r\n    console.log(\"toast State\", this.props.toastState);\r\n    console.log(this.props.wishlist);\r\n\r\n    this.props.getCartPrice();\r\n    this.props.resetToast();\r\n    this.setState({\r\n      finalCart: {\r\n        cart: this.props.cart,\r\n        userId: this.props.userId,\r\n        wishlist:this.props.wishlist,\r\n      },\r\n    });\r\n\r\n    setTimeout(() => {\r\n      console.log(this.state.finalCart);\r\n    }, 1000);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(this.props.toastState);\r\n    console.log(\"component updated\", this.props.cart);\r\n  }\r\n  drop(e, props) {\r\n    e.preventDefault();\r\n    // this.props.cartItemRemoveUpdateServer(data,props.userId)\r\n    console.log(\"e object\", e);\r\n    const courseId = e.dataTransfer.getData(\"text/plain\");\r\n    // const course = document.getElementById(courseId)\r\n    console.log(courseId);\r\n    // course.style.display =  \"block\"\r\n    // e.target.appendChild(course)\r\n    console.log(props);\r\n    console.log(props.cart);\r\n    this.props.remove(+courseId);\r\n    this.props.getCartPrice();\r\n\r\n  }\r\n  dragOver(e) {\r\n    e.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    const obj = this.props;\r\n    let cartData = null;\r\n    if (!this.props.cart.length < 1) {\r\n      cartData = (\r\n        <div className=\"checkout-container\">\r\n          <div className=\"selectedCourses\">\r\n            <LoadData\r\n              cart={this.props.cart}\r\n              remove={this.props.remove}\r\n              getCartPrice={this.props.getCartPrice}\r\n              moveToWishlist={this.props.moveToWishlist}\r\n            />\r\n          </div>\r\n          <div className=\"price-Container\">\r\n            <h3 className=\"white\">{this.props.cart.length} Courses in cart</h3>\r\n            <div className=\"courseTotal \">Total:</div>\r\n            <div className=\"coursePrice white\">{this.props.price}/-</div>\r\n            <div className=\"basePrice\">Baseprice</div>\r\n            <div className=\"offer\">offer%off</div>\r\n            <div className=\"checkout-btn\">\r\n              <button\r\n                onClick={() =>\r\n                  this.props.SubmitData(this.props.userId,this.state.finalCart,)\r\n                }\r\n              >\r\n                Checkout\r\n              </button>\r\n              <Link to=\"/Dashboard\"></Link>\r\n            </div>\r\n            <div\r\n              id=\"bin\"\r\n              onDrop={(e) => this.drop(e, this.props)}\r\n              onDragOver={this.dragOver}\r\n              className=\"deleteIcon\"\r\n            >\r\n              <i\r\n                class=\"fa fa-trash\"\r\n                aria-hidden=\"true\"\r\n                style={{ fontSize: \"38px\" }}\r\n              ></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      cartData = (\r\n        <div className=\"emptyCart\">\r\n          {this.props.toastState ? <SuccessAlert msg=\"Order Placed\" /> : null}\r\n          <div>Cart is Empty :(</div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"main_cart\">\r\n        <div className=\"cartLanding\">\r\n          <h1>Shopping Cart</h1>\r\n        </div>\r\n        {cartData}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    price: state.cartDetails.price,\r\n    cart: state.cartDetails.cart,\r\n    id: state.cartDetails.id,\r\n    dataSource: state.cartDetails.dataSource,\r\n    userId: state.cartDetails.userId,\r\n    toastState: state.cartDetails.toastState,\r\n    wishlist:state.cartDetails.wishlist\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    remove: (index) => dispatch(actions.removeFromCart(index)),\r\n    getCartPrice: () => dispatch(actions.calculateCartPrice()),\r\n    setData: () => dispatch(actions.setData()),\r\n    SubmitData: (id, cart) => dispatch(actions.SubmitData(id, cart)),\r\n    setToast:()=>dispatch(actions.setToast()),\r\n    \r\n    getCartData:(id)=>dispatch(actions.getCartData(id)),\r\n    // cartItemRemoveUpdateServer:(data,id)=>dispatch(actions.cartItemRemoveUpdateServer(data,id))\r\n    resetToast:()=>dispatch(actions.resetToast())\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout);\r\n","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\wishlist\\WishList.js",["237"],"import React, { Component } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport WishlistData from \"./WishlistData\";\r\nimport \"./WishList.css\";\r\nimport \"../checkout/Checkout.css\";\r\nclass WishList extends Component {\r\n  \r\n  render() {\r\n    let wishlistData = null\r\n    if(!this.props.wishlist.length < 1){\r\n      wishlistData = (\r\n        <div className=\"wishlistData\">\r\n          <WishlistData wishlistData={this.props.wishlist} />\r\n        </div>\r\n      )\r\n    }\r\n    else{\r\n      wishlistData = (<div className=\"emptyWishlist\"><div>Wishlist is Empty  :( </div></div>)\r\n    }\r\n    return (\r\n      <div className=\"wishlist_container\">\r\n        <div className=\"wishListLanding\">\r\n          <h1>WishList</h1>\r\n        </div>\r\n        {wishlistData}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    price: state.cartDetails.price,\r\n    cart: state.cartDetails.cart,\r\n    wishlist: state.cartDetails.wishlist,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    remove: (index) => dispatch(actions.removeFromCart(index)),\r\n    getCartPrice: () => dispatch(actions.calculateCartPrice()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WishList);\r\n","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\MyLearning\\MyLearning.js",["238","239"],"import React, { Component } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport PurchasedCourse from \"./PurchasedCourse\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport \"./MyLearning.css\"\r\nclass MyLearning extends Component {\r\n  state={\r\n    length:0,\r\n  }\r\n  componentDidMount(){\r\n    // this.props.getPurchasedCourses(this.props.responseId)\r\n    this.props.getPurchasedCourses(this.props.userId)\r\n    console.log(\"normal\",this.props.learning);\r\n    // this.props.setPurchasedCourses(this.props.learning)\r\n    \r\n  }\r\n  render() {\r\n    let purchasedItem = null\r\n    if(this.props.learning.length >= 1){\r\n      purchasedItem = (<div className=\"myLearningData\">\r\n          {/* <PurchasedCourse fetchedOrder={this.props.learning.flat(Infinity)} /> */}\r\n          <PurchasedCourse fetchedOrder={this.props.learning} />\r\n        </div>)\r\n    }\r\n    else{\r\n      purchasedItem = (\r\n        <div className=\"emptyMyLearning\"><div>MyLearning is Empty  :( </div></div>\r\n      )\r\n    }\r\n    return (\r\n      <div className=\"myLearning_container\">\r\n        <div className=\"myLearningLanding\">\r\n          <h1>Purchased Courses</h1>\r\n        </div>\r\n        <div>\r\n\r\n        <p className=\"totalPurchasedCourses\">\r\n          <hr/>\r\n          {`Total ${this.props.totalNoOfPurchasedCourses} Courses Purchased`}\r\n          <hr/>\r\n          </p>\r\n        </div>\r\n        {purchasedItem}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    order:state.cartDetails.order,\r\n    responseId:state.cartDetails.responseId,\r\n    fetchedOrder:state.cartDetails.fetchedOrder,\r\n    userId:state.cartDetails.userId,\r\n    learning:state.cartDetails.learning,\r\n    totalNoOfPurchasedCourses:state.cartDetails.totalNoOfPurchasedCourses,\r\n    sortedArray:state.cartDetails.sortedArray\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getPurchasedCourses:(id)=> dispatch(actions.getPurchasedCourses(id)),\r\n   setUserId:(id)=>dispatch(actions.setUserId(id)),\r\n  //  setPurchasedCourses:(data)=>dispatch(actions.setPurchasedCourses(data))\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyLearning);\r\n","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\LandingPage\\LandingPage.js",["240"],"import React, { useEffect } from \"react\";\r\nimport \"./LandingPage.css\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction LandingPage(props) {\r\n  useEffect(() => {\r\n    props.getTrendingCourses();\r\n  }, []);\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"LandingPage\">\r\n        <div>\r\n          <img src=\"../img/landingImg.jpg\" alt=\"langingimg\" className=\"landingPageImg\"/>\r\n        </div>\r\n        <div className=\"trendingCourse\">sdasd</div>\r\n        <div className=\"topCategories white\">\r\n          <h2>Top categories</h2>\r\n\r\n          <div className=\"landing-category\">\r\n            {props.TrendingCourses.map((data) => (  \r\n              <div>\r\n                  <Link to={'Courses/'+ data.category}>\r\n                <div>\r\n                  <img\r\n                    src={data.img}\r\n                    alt=\"img\"\r\n                    className=\"categoryImg\"\r\n                  />\r\n                </div>\r\n                <div className=\"categoryName\">{data.category}</div>\r\n                </Link>\r\n              </div>\r\n            ))}\r\n            \r\n          </div>\r\n        </div>\r\n        <div className=\"footer\">\r\n          <div>aasdasda dasda</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    TrendingCourses: state.cartDetails.TrendingCourses,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getTrendingCourses: () => dispatch(actions.getTrendingCourses()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LandingPage);\r\n","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\store\\actions\\actionTypes.js",[],"D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\store\\actions\\index.js",[],"D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\axios-order.js",[],"D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\MyLearning\\PurchasedCourse.js",["241","242"],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nimport { connect } from \"react-redux\";\r\nfunction PurchasedCourse(props) {\r\n  useEffect(() => {\r\n    console.log(\"inside purchased orders\", props.fetchedOrder);\r\n  }, []);\r\n\r\n  return props.fetchedOrder.map((data, i) => {\r\n    // console.log(props.fetchedOrder.reverse())\r\n    // console.log(props.fetchedOrder)\r\n    // console.log(props.fetchedOrder);\r\n\r\n    return (\r\n      <div>\r\n        <fieldset>\r\n          <legend>\r\n            {data.docName ? (\r\n              <code>\r\n                <div>\r\n                  {data.docName.slice(0, 16)}\r\n                  {data.docName.slice(16)}\r\n                </div>\r\n              </code>\r\n            ) : (\r\n              \"No Data Found\"\r\n            )}\r\n          </legend>\r\n          {data.purchasedCourse.map((data, j) => {\r\n            let path = `/Course_Description/${data.courseId}`\r\n            return (\r\n              <Link\r\n                to={{\r\n                  pathname: path,\r\n                  state: {data:data},\r\n                }}\r\n              >\r\n                <div className=\"listOfPurchasedCourse\">\r\n                  <div className=\" courseLogo myLearning-courseLogo\">\r\n                    <img src={data.courseImg} alt=\"courseLogo\" />\r\n                  </div>\r\n                  <div className=\"courseDetails\">\r\n                    <div className=\"courseTitle\">{data.courseName}</div>\r\n                    <div className=\"courseDesc\">{data.courseDesc}</div>\r\n                  </div>\r\n                  <div className=\"coursePricetag\">{data.price}/-</div>\r\n                </div>\r\n              </Link>\r\n            );\r\n          })}\r\n        </fieldset>\r\n      </div>\r\n    );\r\n  });\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PurchasedCourse);\r\n","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\wishlist\\WishlistData.js",["243"],"import React,{useEffect} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nimport { connect } from \"react-redux\";\r\nfunction WishlistData(props) {\r\n  async function moveToCartAndUpdate(data,i) {\r\n    console.log(\"index\", i);\r\n    await props.moveToCart(i);\r\n    props.addCartDataToServer(data,props.userId)\r\n    removeFromWishListAndUpdateServer(data,i);\r\n    props.getCartPrice();\r\n  }\r\n  async function removeFromWishListAndUpdateServer (data,index) {\r\n    await props.removeFromWishList(index);\r\n    props.wishlistRemoveUpdateServer(data,props.userId)\r\n  }\r\n  useEffect(() => {\r\n    console.log(\"props wishlistData\",props.wishlistData)\r\n    \r\n  }, [])\r\n  return props.wishlistData.map((data, i) => {\r\n    console.log(data)\r\n    return (\r\n      <div>\r\n        <div className=\"listOfWishlistedCourses\">\r\n          <div className=\" courseLogo Wishlist-courseLogo\">\r\n            <img src={data.courseImg} alt=\"courseLogo\" />\r\n          </div>\r\n          <div className=\"courseDetails\">\r\n            <div className=\"courseTitle\">{data.courseName}</div>\r\n            <div className=\"courseDesc\">{data.courseDesc}</div>\r\n          </div>\r\n          <div className=\"actions\">\r\n            <div>\r\n              {\" \"}\r\n              <div\r\n              className=\"removeFromWishlist\"\r\n                onClick={() => removeFromWishListAndUpdateServer(data,i)}\r\n                //  onClick= {()=> removeItemAndUpdateCart(i)}\r\n              >\r\n                {\" \"}\r\n                remove\r\n              </div>\r\n            </div>\r\n            <div className=\"moveToCartFromWishlist\">\r\n              <Link to=\"/Wishlist\" onClick={() => moveToCartAndUpdate(data,i)}>\r\n                Move to Cart\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"coursePricetag\">{data.price}/-</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userId:state.cartDetails.userId\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    remove: (index) => dispatch(actions.removeFromCart(index)),\r\n    getCartPrice: () => dispatch(actions.calculateCartPrice()),\r\n    moveToWishlist: (i) => dispatch(actions.moveToWishlist(i)),\r\n    removeFromWishList: (i) => dispatch(actions.removeFromWishList(i)),\r\n    moveToCart: (i) => dispatch(actions.moveToCart(i)),\r\n    wishlistRemoveUpdateServer:(data,id)=>dispatch(actions.wishlistRemoveUpdateServer(data,id)),\r\n    addCartDataToServer:(data,id)=>dispatch(actions.addCartDataToServer(data,id))\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WishlistData);\r\n","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\checkout\\LoadData.js",["244"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction LoadData(props) {\r\n  async function removeItemAndUpdateCart(i,data) {\r\n    console.log(\"index\", i);\r\n    await props.cartItemRemoveUpdateServer(data,props.userId)\r\n    await props.remove(i);\r\n    props.getCartPrice();\r\n  }\r\n  async function moveToWishlistAndUpdateCart(i,data) {\r\n    await props.addWishListDataToServer(data,props.userId)\r\n    await props.cartItemRemoveUpdateServer(data,props.userId)\r\n    props.moveToWishlist(i);\r\n    props.remove(i);\r\n    props.getCartPrice();\r\n  }\r\n  const dragStart = e => {\r\n    console.log(\"e target value\",e.target)\r\n    \r\n    const target = e.target\r\n    e.dataTransfer.setData(\"text/plain\", target.id)\r\n    // setTimeout(()=>{\r\n    //   target.style.display= \"none\"\r\n    // },0)\r\n  }\r\n  const dragOver = e =>{\r\n    e.stopPropagation()\r\n  }\r\n  return props.cart.map((data, i) => {\r\n    return (\r\n      <div>\r\n        <div className=\"listOfSelectedCourse\" draggable=\"true\" onDragStart={dragStart} onDragOver={dragOver} id={data.courseId}>\r\n          <div className=\"courseLogo\">\r\n            <img src={data.courseImg} alt=\"courseLogo\" />\r\n          </div>\r\n          <div className=\"courseDetails\">\r\n            <div className=\"courseTitle\">{data.courseName}</div>\r\n            <div className=\"courseDesc\">{data.courseDesc}</div>\r\n          </div>\r\n          <div className=\"actions\">\r\n            <div>\r\n              {\" \"}\r\n              <div onClick={() => removeItemAndUpdateCart(i,data)} className=\"remove\"> remove</div>\r\n            </div>\r\n            <div>\r\n              <div onClick={() => moveToWishlistAndUpdateCart(i,data)} className=\"wishlist\">\r\n                Move to Wishlist\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"coursePricetag\">{data.price}/-</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    price: state.cartDetails.price,\r\n    cart: state.cartDetails.cart,\r\n    userId:state.cartDetails.userId\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    remove: (index) => dispatch(actions.removeFromCart(index)),\r\n    getCartPrice: () => dispatch(actions.calculateCartPrice()),\r\n    moveToWishlist: (i) => dispatch(actions.moveToWishlist(i)),\r\n    addWishListDataToServer:(data,id)=> dispatch(actions.addWishListDataToServer(data,id)),\r\n    cartItemRemoveUpdateServer:(data,id)=>dispatch(actions.cartItemRemoveUpdateServer(data,id))\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoadData);\r\n","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\Notification\\Notification.js",["245"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nimport \"./Notification.css\";\r\nfunction Notification(props) {\r\n  useEffect(() => {\r\n    console.log(\"notification rendered\");\r\n    // alert()\r\n  }, []);\r\n  const handleClicked = (e) => {\r\n    e.stopPropagation();\r\n    props.showNotification();\r\n    console.log(\"notification function\");\r\n  };\r\n  const clearNotification = (e) => {\r\n    e.stopPropagation();\r\n    props.ClearNotificationList();\r\n    console.log(\"notification function\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"NotificationContainer white bottom\">\r\n        <div className=\"NotificationTitle\">\r\n          <h3>Notifications</h3>\r\n          <hr />\r\n        </div>\r\n        {props.notificationItems.length > 0 ? props.notificationItems.map((data) => (\r\n          <div className=\"NotificationItem white\">\r\n            <div className=\"ItemTitle\">{data.msg}</div>\r\n            {data.time ? <div className=\"ItemTime\">{data.time}</div> :null}\r\n          </div>\r\n        )) : (\r\n            <div className=\"NotificationItem white\">\r\n            <div className=\"noActivity\">No Activity Found</div>\r\n          </div>\r\n        ) }\r\n        {props.notificationItems.length > 0 ? (\r\n          <div\r\n            className=\"ClearNotification\"\r\n            onClick={(e) => clearNotification(e)}\r\n          >\r\n            Clear Notification\r\n          </div>\r\n        ) : null}\r\n\r\n        <div className=\"closeNotofication\" onClick={(e) => handleClicked(e)}>\r\n          Close\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    notificationItems: state.cartDetails.notificationItems,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    showNotification: () => dispatch(actions.showNotification()),\r\n    ClearNotificationList: () => dispatch(actions.ClearNotificationList()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Notification);\r\n","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\Modal\\Modal.js",["246"],"import React,{useEffect, useState} from 'react';\r\n\r\nfunction Modal(props) {\r\n    const [modalDisplay, setModalDisplay] = useState(\"block\");\r\n    useEffect(() => {\r\n      console.log(\"Modal rendered\");\r\n      console.log(props.url);\r\n      console.log(props.title);\r\n    }, [])\r\n    const myModalClickHandler = () =>{\r\n      setModalDisplay(\"none\")\r\n      props.resetModal()\r\n    }\r\n    return (\r\n        <div>\r\n            <div\r\n                id=\"myModal\"\r\n                className=\"modal\"\r\n                style={{ display: modalDisplay}}\r\n                onClick={() => myModalClickHandler()}\r\n              >\r\n                <div className=\"modal-content\">\r\n                  <div className=\"modal-header\">\r\n                    <span className=\"close\">&times;</span>\r\n                    <h6> {props.title}</h6>\r\n                  </div>\r\n                  <div className=\"modal-body\">\r\n                    <div className=\"videoContainer\">\r\n                      <video controls>\r\n                        <source\r\n                          src={props.url}\r\n                          type=\"video/mp4\"\r\n                        />\r\n                        <source\r\n                          src={props.url}\r\n                          type=\"video/ogg\"\r\n                        />\r\n                        Your browser does not support the video tag.\r\n                      </video>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Modal;","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\Alert\\Alert.js",["247"],"import React, { useEffect, useState } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n// import \"./Alert.css\"\r\nexport function Alert(props) {\r\n  const [toastDispatch, setToastDispatch] = useState(false);\r\n  const notify = () => {\r\n    toast.error(props.msg, {\r\n      position: toast.POSITION.BOTTOM_CENTER,\r\n      autoClose: 3000,\r\n      // className:\"toast-error\"\r\n    });\r\n    setTimeout(() => {\r\n      setToastDispatch(true);\r\n    }, 3000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"alert rendered\")\r\n    notify();\r\n    return;\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {toastDispatch ? <Redirect to=\"/Login\" /> : null}\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\Alert\\WarningAlert.js",["248"],"import React, { useEffect } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n// import \"./Alert.css\"\r\nexport function WarningAlert(props) {\r\n  const notify = () => {\r\n    toast.warn(props.msg, {\r\n      position: toast.POSITION.TOP_CENTER,\r\n      autoClose: 3000,\r\n      // className:\"toast-error\"\r\n    });\r\n    \r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"alert rendered\")\r\n    notify();\r\n    return;\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\Alert\\SuccessAlert.js",["249"],"import React, { useEffect } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./Alert.css\"\r\n// import \"./Alert.css\"\r\nexport function SuccessAlert(props) {\r\n  setTimeout(() => {\r\n    \r\n    window.sessionStorage.setItem(\"user\", \"unset\");\r\n  }, 3000);\r\n\r\n  const notify = () => {\r\n    toast.success(props.msg, {\r\n      position: toast.POSITION.BOTTOM_CENTER,\r\n      autoClose: 3000,\r\n      className:\"toast-container\"\r\n      // className:\"toast-error\"\r\n    });\r\n    \r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"alert rendered\")\r\n    notify();\r\n    return;\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\store\\actions\\cartActions.js",["250"],"import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-order\";\r\nimport  firebase  from \"firebase\";\r\nimport { db } from \"../../firebase\";\r\nimport {AddMsgToNotificationList} from \"./coursePriceAction\"\r\n\r\nexport const addDetails = (cart) => {\r\n    return {\r\n      type: actionTypes.ADD_TO_CART,\r\n      cart: cart,\r\n    };\r\n  };\r\n  export const removeFromCart = (index) => {\r\n    return {\r\n      type: actionTypes.REMOVE_FROM_CART,\r\n      index,\r\n    };\r\n  };\r\n  export const calculateCartPrice = () => {\r\n    return {\r\n      type: actionTypes.CALCULATE_CART_PRICE,\r\n    };\r\n  };\r\n  export const SubmitData = (id, data) => {\r\n    console.log(\"id inside submitaction\",id)\r\n    console.log(data);\r\n    return (dispatch) => {\r\n      \r\n  /*-----*/\r\n  \r\n      // axios\r\n      //   .post(\"/orderedData.json\", cart)\r\n      //   .then((res) => {\r\n      //     dispatch(orderedData(cart));\r\n      //     dispatch(setResponseId(res.data.name));\r\n      //     dispatch(clearCart());\r\n      //     console.log(\"res\", res);\r\n      //     console.log(\"res\", res.data.name);\r\n      //     console.log(\"data submitted\");\r\n      //   })\r\n      //   .catch((error) => {\r\n      //     console.log(\"error durning \");\r\n      //   });\r\n  \r\n  \r\n  /*-----*/\r\n  \r\n          // db.settings({\r\n          //     timestampsInSnapshots: true\r\n          //     });\r\n        //  db.collection(\"orders\").doc(id).set({\r\n        //       cart: cart.cart,\r\n        //       },{merge:true}).then(()=>{\r\n        //         console.log(\"data set to new doc\");\r\n        //       });  \r\n        \r\n  \r\n  // let today = new Date();\r\n  // let date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n  // let time = (today + date).slice(0,25)\r\n  let today = new Date();\r\n  let dd = today.getDate();\r\n  let mm = today.getMonth()+1; \r\n  let yyyy = today.getFullYear();\r\n  if(dd<10) \r\n  {\r\n      dd='0'+dd;\r\n  } \r\n  if(mm<10) \r\n  {\r\n      mm='0'+mm;\r\n  } \r\n  let seconds = today.getSeconds()\r\n  if(seconds<10){\r\n    seconds = '0'+seconds\r\n  }\r\n  let minutes = today.getMinutes();\r\n  if(minutes<10){\r\n    minutes = '0'+minutes\r\n  }\r\n  let hour = today.getHours();\r\n  if(hour<10){\r\n    hour = '0'+hour\r\n  }\r\n  let time  = 'Date: '+dd+'-'+mm+'-'+yyyy + ' Time: '+hour +':' +minutes+ ':' + seconds;\r\n  let timeOnly = hour +':' +minutes+ ':' + seconds;\r\n        console.log(data.cart);\r\n        db.collection('orders').doc(id)\r\n                  .collection('Purchased-Courses').doc(time).set({\r\n                    purchasedCourse:data.cart,\r\n                    docName:time\r\n                  })\r\n        db.collection('orders').doc(id).update({\r\n        cart:[],\r\n        }).then(()=>{\r\n          console.log(\"data posted\");\r\n\r\n          dispatch(orderedData(data.cart));\r\n        }).then(()=>{\r\n          dispatch(AddMsgToNotificationList(\"Order Placed Successfully\",timeOnly))\r\n            dispatch(clearCart())\r\n        })\r\n    };\r\n  };\r\n  export const orderedData = (data) => {\r\n    return {\r\n      type: actionTypes.ORDERED_DATA,\r\n      data,\r\n    };\r\n  };\r\n  export const setResponseId = (id) => {\r\n    return {\r\n      type: actionTypes.SET_RESPONSE_ID,\r\n      id,\r\n    };\r\n  };\r\n  export const clearCart = () => {\r\n    return {\r\n      type: actionTypes.CLEAR_CART,\r\n    };\r\n  };\r\n  export const setEmpty = () => {\r\n    return {\r\n      type: actionTypes.SET_EMPTY,\r\n    };\r\n  };\r\n  export const getCartData =(id) =>{\r\n    return dispatch =>{\r\n      if(id){\r\n\r\n        db.collection('orders').doc(id).get().then((doc)=>{\r\n  \r\n          if(doc.exists){\r\n                dispatch(assignCartData(doc.data().cart));\r\n          }\r\n      })\r\n      }\r\n  // }\r\n  }\r\n  }\r\n  export const assignCartData = (data) => {\r\n    console.log(\"data\",data)\r\n    return{\r\n      type:actionTypes.ASSIGN_CART_DATA,\r\n      data\r\n    }\r\n  }\r\n  export const addCartDataToServer = (data,id) => {\r\n    return dispatch => {\r\n      if(id){\r\n        const docRef = db.collection(\"orders\").doc(id);\r\n        console.log(\"data inside add to cart function\",data)\r\n        docRef.update({\r\n        cart: firebase.firestore.FieldValue.arrayUnion(data)\r\n      }).then(()=>{\r\n        dispatch(calculateCartPrice())\r\n      })\r\n      }\r\n    }\r\n  }\r\n  export const cartItemRemoveUpdateServer = (data,id) => {\r\n    return dispatch => {\r\n      const docRef = db.collection(\"orders\").doc(id);\r\n       docRef.update({\r\n      cart: firebase.firestore.FieldValue.arrayRemove(data)\r\n      });\r\n  \r\n    }\r\n  }\r\n  export const setToast = () => {\r\n    return {\r\n      type: actionTypes.SET_TOAST,\r\n    };\r\n  };\r\n  export const resetToast = () => {\r\n    return {\r\n      type: actionTypes.RESET_TOAST,\r\n    };\r\n  };","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\store\\actions\\coursePriceAction.js",["251","252","253","254","255","256"],"import * as actionTypes from \"./actionTypes\";\r\nimport axios from \"../../axios-order\";\r\nimport firebase from \"firebase\";\r\nimport { db,storageRef } from \"../../firebase\";\r\n\r\nexport const getTrendingCourses = () =>{\r\n  return(dispatch) =>{\r\n    axios.get(\"/TrendingCourses.json\")\r\n        .then((res) => {\r\n          dispatch(assignTrendingCourses(res.data));\r\n        })\r\n        .catch((error) => {\r\n          // console.log(error);\r\n        })\r\n  }\r\n}\r\nexport const assignTrendingCourses = (data) => {\r\n  console.log(data);\r\n  return{\r\n    type:actionTypes.ASSIGN_TRENDING_COURSES,\r\n    data\r\n  }\r\n}\r\nexport const setUserId = (id) => {\r\n  return {\r\n    type: actionTypes.SET_USER_ID,\r\n    id,\r\n  };\r\n};\r\nexport const setData = (currentUser,start,end) => {\r\n  // console.log(\"set User\");\r\n  // console.log(\"start\",start);\r\n  // console.log(\"end\",end);\r\n  // let temp_array = []\r\n  return (dispatch) => {\r\n    // for(let i=start;i<end;i++){\r\n    //   axios\r\n    //     .get(`/CourseData/${i}.json`)\r\n    //     .then((res) => {\r\n    //       // console.log(`/CourseData/${i}.json`);\r\n    //       console.log(\"api called\");\r\n    //       // console.log(res.data);//object received from api\r\n    //       // temp_array.push(res.data)\r\n    //       dispatch(assignData(res.data, currentUser));\r\n    //     })\r\n    //     // .then(()=>{\r\n    //     //   console.log(  );\r\n\r\n    //     //   console.log(\"temp\",temp_array);\r\n\r\n    //     //   // dispatch(assignData(temp_array, currentUser));\r\n\r\n    //     // })\r\n    //     .catch((error) => {\r\n    //       // console.log(error);\r\n    //     });\r\n    //   }\r\n      dispatch(checkAuthentication(currentUser.uid))\r\n      axios\r\n        .get(\"/CourseData/.json\")\r\n        .then((res) => {\r\n          dispatch(assignData(res.data, currentUser));\r\n        })\r\n        .catch((error) => {\r\n          // console.log(error);\r\n        });\r\n  };\r\n};\r\nexport const assignData = (data, currentUser) => {\r\n  return {\r\n    type: actionTypes.ASSIGN_DATA,\r\n    data,\r\n    currentUser,\r\n  };\r\n};\r\nexport const getTableContent  = (id) => {\r\n  return dispatch => {\r\n    dispatch(checkAuthentication(id))\r\n    axios\r\n    .get(\"/TableContent.json\")\r\n    .then((res) => {\r\n      // console.log(res.data);\r\n      dispatch(assignTableContent(res.data));\r\n    })\r\n    .catch((error) => {\r\n      // console.log(error);\r\n    });\r\n  \r\n    // axios.get(\"https://newsapi.org/v2/everything?q=tesla&apiKey=2a27986ea0a24fb997dffa1fd17c5731\").then((res)=> console.log(res.data))\r\n  }\r\n}\r\nexport const assignTableContent  = (data) => {\r\n  return{\r\n    type:actionTypes.ASSIGN_TABLECONTENT,\r\n    data\r\n  }\r\n}\r\nexport const resetData = () => {\r\n  return {\r\n    type: actionTypes.RESET_DATA,\r\n  };\r\n};\r\n\r\nexport const moveToWishlist = (index) => {\r\n  return {\r\n    type: actionTypes.MOVE_TO_WISHLIST,\r\n    index,\r\n  };\r\n};\r\nexport const removeFromWishList = (index) => {\r\n  return {\r\n    type: actionTypes.REMOVE_FROM_WISHLIST,\r\n    index,\r\n  };\r\n};\r\nexport const moveToCart = (index) => {\r\n  return {\r\n    type: actionTypes.MOVE_TO_CART_FROM_WISHLIST,\r\n    index,\r\n  };\r\n};\r\nexport const addToWishlistDirectly = (id) => {\r\n  return {\r\n    type: actionTypes.ADD_TO_WISHLIST_DIRECTLY,\r\n    wishlistId: id,\r\n  };\r\n};\r\n\r\nexport const storeWishlistData = (data, id) => {\r\n  // console.log(\"data\", data);\r\n  db.collection(\"orders\")\r\n    .doc(id)\r\n    .update({\r\n      wishlist: data,\r\n    })\r\n    .then(() => {\r\n      // console.log(\"wishlist updated\");\r\n    });\r\n};\r\n\r\nexport const getPurchasedCourses = (id) => {\r\n  // console.log(id);\r\n  return (dispatch) => {\r\n    dispatch(setEmpty());\r\n\r\n    /*-------------*/\r\n\r\n    // axios\r\n    //   .get(\"/orderedData.json\")\r\n    //   .then((res) => {\r\n    //     // console.log(res.data);\r\n\r\n    //     dispatch(setEmpty());\r\n    //     dispatch(selectUser(res.data, id));\r\n    //     // dispatch(setFetchedOrder(res.data[id]))\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.log(error);\r\n    //   });\r\n\r\n    /*-------------*/\r\n    if (id) {\r\n      db.collection(\"orders\")\r\n        .doc(id)\r\n        .get()\r\n        .then((doc) => { \r\n          // console.log(\"fetched id\", doc.data());\r\n        });\r\n        \r\n      db.collection(\"orders\")\r\n        .doc(id)\r\n        .collection(\"Purchased-Courses\")\r\n        .orderBy(\"docName\", \"desc\")\r\n        .get()\r\n        .then((snapShot) => {\r\n            \r\n            snapShot.docs.map((doc) =>{\r\n              \r\n              // console.log(doc.id)\r\n              // console.log(doc.data().purchasedCourse.length)\r\n\r\n              dispatch(selectedId(doc.data()))\r\n            }\r\n            )\r\n          \r\n          // array of cities objects\r\n        })\r\n    }\r\n  };\r\n};\r\nexport const selectUser = (data, id) => {\r\n  // console.log(\"inside selectUser action\");\r\n  // console.log(data);\r\n  //   console.log(id);\r\n  return (dispatch) => {\r\n    Object.keys(data).map((key, index) => {\r\n      //   console.log(data[key]);\r\n      //   console.log(data[key].userId);\r\n      //   console.log(data[key].cart);\r\n      //   dispatch(purchasedCourseId(data[key].cart.courseId));\r\n      if (data[key].userId === id) {\r\n        // console.log(data[key].cart);\r\n        dispatch(selectedId(data[key].cart));\r\n        data[key].cart.map((data) => {\r\n          // console.log(data);\r\n          dispatch(purchasedCourseId(data.courseId));\r\n        });\r\n      }\r\n    });\r\n  };\r\n};\r\n// export const mappedData = ()\r\nexport const setEmpty = () => {\r\n  return {\r\n    type: actionTypes.SET_EMPTY,\r\n  };\r\n};\r\nexport const purchasedCourseId = (id) => {\r\n  // console.log(id);\r\n  return {\r\n    type: actionTypes.PURCHASED_COURSE_ID,\r\n    id,\r\n  };\r\n};\r\nexport const selectedId = (purchasedCourse) => {\r\n  // console.log(\"inside selectedId action\");\r\n  return {\r\n    type: actionTypes.ADD_TO_LEARNING_ARRAY,\r\n    purchasedCourse,\r\n    totalNoOfPurchasedCourse:purchasedCourse.purchasedCourse.length\r\n  };\r\n};\r\n\r\n\r\nexport const setFetchedOrder = (data) => {\r\n  return {\r\n    type: actionTypes.SET_FETCHED_ORDER,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const updateWishlist = (id, wishListData) => {\r\n  return (dispatch) => {\r\n    db.collection(\"orders\")\r\n      .doc(id)\r\n      .update({\r\n        cart: {\r\n          wishlist: wishListData,\r\n        },\r\n      })\r\n      .then(function () {\r\n        console.log(\"Data  updated\");\r\n      });\r\n  };\r\n};\r\n\r\nexport const getWishlistData = (id) => {\r\n  return (dispatch) => {\r\n    // if(db.collection('orders').doc(id)){\r\n    //   console.log(db.collection('orders').doc(id) ? \"true\" : \"false\");\r\n    // }\r\n    // else{\r\n    //   console.log(\"false inside else\");\r\n    // }\r\n\r\n    // console.log(db.collection('orders'));\r\n    // const docRef = db.collection('orders').doc(id)\r\n    // docRef.get().then((doc)=>{\r\n    //   if(doc.exists){\r\n    //     console.log(\"doc\",docRef.doc.data().wishlist)\r\n    //     // dispatch(assignWishListData(docRef.doc.data().wishlist));\r\n    //   }\r\n    // })\r\n\r\n    // if(db.collection('orders')){\r\n    db.collection(\"orders\")\r\n      .doc(id)\r\n      .get()\r\n      .then((doc) => {\r\n        if (doc.exists) {\r\n          dispatch(assignWishListData(doc.data().wishlist));\r\n        }\r\n      });\r\n    // }\r\n  };\r\n};\r\n\r\nexport const assignWishListData = (data) => {\r\n  return {\r\n    type: actionTypes.ASSIGN_WISHLIST_DATA,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const addWishListDataToServer = (data, id) => {\r\n  return (dispatch) => {\r\n    const docRef = db.collection(\"orders\").doc(id);\r\n    docRef.update({\r\n      wishlist: firebase.firestore.FieldValue.arrayUnion(data),\r\n    });\r\n  };\r\n};\r\n\r\nexport const wishlistRemoveUpdateServer = (data, id) => {\r\n  return (dispatch) => {\r\n    const docRef = db.collection(\"orders\").doc(id);\r\n    docRef.update({\r\n      wishlist: firebase.firestore.FieldValue.arrayRemove(data),\r\n    });\r\n  };\r\n};\r\n\r\nexport const setFormat = (id) => {\r\n  return (dispatch) => {\r\n    // console.log(\"setFormat id 1\", id);\r\n\r\n    db.collection(\"orders\")\r\n      .doc(id)\r\n      .get()\r\n      .then((doc) => {\r\n        if (!doc.exists) {\r\n          db.collection(\"orders\").doc(id).set({\r\n            id: id,\r\n            // email:currentUser.email,\r\n            wishlist: [],\r\n            cart: [],\r\n          });\r\n        }\r\n      }).then(()=>{\r\n        console.log(\"account created\");\r\n      });\r\n    // console.log(\"setFormat id 2\", id);\r\n  };\r\n};\r\n\r\nexport const setFormateState = () => {\r\n  return {\r\n    type: actionTypes.SET_FORTMAT_STATE,\r\n  };\r\n};\r\n\r\nexport const checkAuthentication = (userId) =>{\r\n  console.log(userId);\r\n  return dispatch => {\r\n    dispatch(setEmpty())\r\n    if(userId){\r\n\r\n      db.collection(\"orders\")\r\n          .doc(userId)\r\n          .collection(\"Purchased-Courses\")\r\n          .orderBy(\"docName\", \"desc\")\r\n          .get()\r\n          .then((snapShot) => {\r\n              \r\n              snapShot.docs.map((doc) =>{\r\n                \r\n                // console.log(doc.id)\r\n                console.log(doc.data().purchasedCourse)\r\n  \r\n                dispatch(paidCourseId(doc.data().purchasedCourse))\r\n              }\r\n              )\r\n            \r\n            // array of cities objects\r\n          });\r\n    }\r\n  }\r\n}\r\n\r\nexport const paidCourseId = (data) =>{\r\n  return dispatch =>{\r\n\r\n    data.map((data)=>{\r\n      console.log(data.courseId);\r\n      dispatch(setPaidCourseId(data.courseId))\r\n    })\r\n\r\n  }\r\n}\r\nexport const setPaidCourseId = (id)=>{\r\n  return{\r\n    type:actionTypes.PAID_COURSE_ID,\r\n    id\r\n  } \r\n\r\n}\r\n\r\nexport const showNotification = () => {\r\n  return{\r\n    type:actionTypes.SHOW_NOTIFICATION\r\n  }\r\n}\r\n\r\n\r\nexport const AddMsgToNotificationList = (msg,time) =>{\r\n  return{\r\n    type:actionTypes.ADD_MSG_TO_NOTIFICATION_LIST,\r\n    Item:{\r\n      msg:msg,\r\n      time:time\r\n    }\r\n    \r\n  }\r\n}\r\nexport const ClearNotificationList = (msg) =>{\r\n  return{\r\n    type:actionTypes.CLEAR_NOTIFICATION_LIST,\r\n    msg\r\n  }\r\n}","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\color.jsx",["257"],"\r\nlet color = null\r\nexport default color = [\r\n    \"AliceBlue\",\r\n  \"AntiqueWhite\",\r\n  \"Aqua\",\r\n  \"Aquamarine\",\r\n  \"Azure\",\r\n  \"Beige\",\r\n  \"Bisque\",\r\n  \"Black\",\r\n  \"BlanchedAlmond\",\r\n  \"Blue\",\r\n  \"BlueViolet\",\r\n  \"Brown\",\r\n  \"BurlyWood\",\r\n  \"CadetBlue\",\r\n  \"Chartreuse\",\r\n  \"Chocolate\",\r\n  \"Coral\",\r\n  \"CornflowerBlue\",\r\n  \"Cornsilk\",\r\n  \"Crimson\",\r\n  \"Cyan\",\r\n  \"DarkBlue\",\r\n  \"DarkCyan\",\r\n  \"DarkGoldenRod\",\r\n  \"DarkGray\",\r\n  \"DarkGrey\",\r\n  \"DarkGreen\",\r\n  \"DarkKhaki\",\r\n  \"DarkMagenta\",\r\n  \"DarkOliveGreen\",\r\n  \"DarkOrange\",\r\n  \"DarkOrchid\",\r\n  \"DarkRed\",\r\n  \"DarkSalmon\",\r\n  \"DarkSeaGreen\",\r\n  \"DarkSlateBlue\",\r\n  \"DarkSlateGray\",\r\n  \"DarkSlateGrey\",\r\n  \"DarkTurquoise\",\r\n  \"DarkViolet\",\r\n  \"DeepPink\",\r\n  \"DeepSkyBlue\",\r\n  \"DimGray\",\r\n  \"DimGrey\",\r\n  \"DodgerBlue\",\r\n  \"FireBrick\",\r\n  \"FloralWhite\",\r\n  \"ForestGreen\",\r\n  \"Fuchsia\",\r\n  \"Gainsboro\",\r\n  \"GhostWhite\",\r\n  \"Gold\",\r\n  \"GoldenRod\",\r\n  \"Gray\",\r\n  \"Grey\",\r\n  \"Green\",\r\n  \"GreenYellow\",\r\n  \"HoneyDew\",\r\n  \"HotPink\",\r\n  \"IndianRed\",\r\n  \"Indigo\",\r\n  \"Ivory\",\r\n  \"Khaki\",\r\n  \"Lavender\",\r\n  \"LavenderBlush\",\r\n  \"LawnGreen\",\r\n  \"LemonChiffon\",\r\n  \"LightBlue\",\r\n  \"LightCoral\",\r\n  \"LightCyan\",\r\n  \"LightGoldenRodYellow\",\r\n  \"LightGray\",\r\n  \"LightGrey\",\r\n  \"LightGreen\",\r\n  \"LightPink\",\r\n  \"LightSalmon\",\r\n  \"LightSeaGreen\",\r\n  \"LightSkyBlue\",\r\n  \"LightSlateGray\",\r\n  \"LightSlateGrey\",\r\n  \"LightSteelBlue\",\r\n  \"LightYellow\",\r\n  \"Lime\",\r\n  \"LimeGreen\",\r\n  \"Linen\",\r\n  \"Magenta\",\r\n  \"Maroon\",\r\n  \"MediumAquaMarine\",\r\n  \"MediumBlue\",\r\n  \"MediumOrchid\",\r\n  \"MediumPurple\",\r\n  \"MediumSeaGreen\",\r\n  \"MediumSlateBlue\",\r\n  \"MediumSpringGreen\",\r\n  \"MediumTurquoise\",\r\n  \"MediumVioletRed\",\r\n  \"MidnightBlue\",\r\n  \"MintCream\",\r\n  \"MistyRose\",\r\n  \"Moccasin\",\r\n  \"NavajoWhite\",\r\n  \"Navy\",\r\n  \"OldLace\",\r\n  \"Olive\",\r\n  \"OliveDrab\",\r\n  \"Orange\",\r\n  \"OrangeRed\",\r\n  \"Orchid\",\r\n  \"PaleGoldenRod\",\r\n  \"PaleGreen\",\r\n  \"PaleTurquoise\",\r\n  \"PaleVioletRed\",\r\n  \"PapayaWhip\",\r\n  \"PeachPuff\",\r\n  \"Peru\",\r\n  \"Pink\",\r\n  \"Plum\",\r\n  \"PowderBlue\",\r\n  \"Purple\",\r\n  \"RebeccaPurple\",\r\n  \"Red\",\r\n  \"RosyBrown\",\r\n  \"RoyalBlue\",\r\n  \"SaddleBrown\",\r\n  \"Salmon\",\r\n  \"SandyBrown\",\r\n  \"SeaGreen\",\r\n  \"SeaShell\",\r\n  \"Sienna\",\r\n  \"Silver\",\r\n  \"SkyBlue\",\r\n  \"SlateBlue\",\r\n  \"SlateGray\",\r\n  \"SlateGrey\",\r\n  \"Snow\",\r\n  \"SpringGreen\",\r\n  \"SteelBlue\",\r\n  \"Tan\",\r\n  \"Teal\",\r\n  \"Thistle\",\r\n  \"Tomato\",\r\n  \"Turquoise\",\r\n  \"Violet\",\r\n  \"Wheat\",\r\n  \"White\",\r\n  \"WhiteSmoke\",\r\n  \"Yellow\",\r\n  \"YellowGreen\",\r\n]","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\NewsFeed\\NewsFeed.js",["258"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./NewsFeed.css\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router\";\r\nfunction NewsFeed(props) {\r\n  console.log(\"render\");\r\n  const [news, setNews] = useState(null);\r\n  const [currentFilter,setCurrentFilter] = useState(\"Trending\")\r\n  const categoryList = [\"business\",\"entertainment\",\"general\",\"health\",\"science\",\"sports\",\"technology\"]\r\n  useEffect(() => {\r\n    trendingNews();\r\n  }, []);\r\n//   const techNews = () => {\r\n//     console.log(\"tech news\");\r\n\r\n//     setNews(null);\r\n//     let main_url =\r\n//       \"https://newsapi.org/v2/sources?category=technology&country=us&apiKey=2a27986ea0a24fb997dffa1fd17c5731\";\r\n//     axios\r\n//       .get(main_url)\r\n//       .then((res) => {\r\n//         console.log(res.data.sources);\r\n//         setNews(res.data.sources);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.log(error);\r\n//       });\r\n//   };\r\n  const trendingNews = () => {\r\n    console.log(\"trending news\");\r\n    setNews(null);\r\n    let main_url =\r\n      \"https://newsapi.org/v2/top-headlines?country=in&apiKey=2a27986ea0a24fb997dffa1fd17c5731\";\r\n    axios\r\n      .get(main_url)\r\n      .then((res) => {\r\n        console.log(res.data.articles);\r\n        setNews(res.data.articles);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const filterNews  = (data) => {\r\n      setNews(null)\r\n      let url = null\r\n    if(categoryList.includes(data)){\r\n        setCurrentFilter(data)\r\n        url = `https://newsapi.org/v2/sources?category=${data}&country=us&apiKey=2a27986ea0a24fb997dffa1fd17c5731`\r\n        axios.get(url)\r\n        .then((res) => {\r\n        console.log(res.data.sources);\r\n        setNews(res.data.sources);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n    else{\r\n        trendingNews()\r\n    }\r\n  }\r\n  const RedirectPage = (url) => {\r\n    window.location.replace(url);\r\n  };\r\n  let newsData = null\r\n newsData = (\r\n      <>\r\n    {news?.map((data) => {\r\n        return (\r\n          <div className=\"listOfNews\">\r\n            {data.urlToImage ? (\r\n              <div className=\" newsLogo\">\r\n                <img src={data.urlToImage} alt=\"newsLogo\" />\r\n              </div>\r\n            ) : null}\r\n\r\n            <div className=\"newsDetails\">\r\n              <div className=\"newsTitle\">\r\n                {data.title ? data.title : data.name}\r\n              </div>\r\n              <div className=\"newsDesc\">{data.description}</div>\r\n              <hr />\r\n              {data.publishedAt ? (\r\n                <div className=\"publitionDateTime\">\r\n                  <strong>PublishedAt:</strong><br/>\r\n                  {data.publishedAt}\r\n                </div>\r\n              ) : null}\r\n              <button\r\n                onClick={() => RedirectPage(data.url)}\r\n                className=\"readMore-btn\"\r\n              >\r\n                Read More\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n      \r\n          \r\n      </>\r\n  )\r\n\r\n  return (\r\n    <div className=\"newsContainer\">\r\n      <div className=\"newsfeed-Title\">\r\n        <h1>NewsFeed<div className=\"currentFilter\">({currentFilter})</div></h1>\r\n      </div>\r\n\r\n      <div className=\"filterNews\">\r\n          {categoryList.map((data,i)=>{\r\n              return(\r\n        <div className=\"newsCategory\" onClick={() => filterNews(data)} name={data}>\r\n          {data}\r\n        </div> \r\n              )\r\n         })\r\n          }\r\n      </div>\r\n      {news ? newsData : (<div className=\"white\">Loading....</div>)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewsFeed;\r\n\r\n// <div className=\"newsCategory\" onClick={() => trendingNews()} >\r\n//           Trending News        \r\n//           </div>","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\component\\Admin\\Admin.js",["259","260","261"],"import React, { useRef, useState } from \"react\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport {  useHistory } from \"react-router-dom\";\r\nimport axios from \"../../axios-order\";\r\nfunction Admin (props){\r\n  const [alertCss, setAlertCss] = useState(\"danger\");\r\n  const [data,setData] = useState(null)\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [msg,setMsg] = useState('')\r\n  const userID = useRef();\r\n  const courseId = useRef()\r\n  const history = useHistory();\r\n  const fetchData = (id) =>{\r\n\r\n    return new Promise((resolve,reject)=>{\r\n        if(id){\r\n            axios.get(`/CourseData/${id}.json`)\r\n            .then((res)=>{\r\n                console.log(res.data);\r\n                // setData(res.data)\r\n                resolve(res.data)\r\n            })\r\n            .catch((error)=>{\r\n                setError(error)\r\n                reject(error)\r\n            })\r\n        }\r\n      })\r\n}\r\n       \r\n   function handleSubmit(e) {\r\n    e.preventDefault();\r\n    fetchData(courseId.current.value).then((data)=>{\r\n        console.log(data);\r\n        console.log(userID.current.value);\r\n        props.giftCourse(data,userID.current.value);\r\n        setMsg('Course has been gifted')\r\n        setAlertCss(\"success\")\r\n        setTimeout(()=>{\r\n            setMsg(\"\")\r\n            userID.current.value=\"\"\r\n            courseId.current.value=\"\"\r\n            setError(\"\");\r\n        },3000)\r\n    }).catch((error)=>{\r\n        console.log(error);\r\n    })\r\n    // try {\r\n    //   setError(\"\");\r\n    //   setLoading(true);\r\n    //   await fetchData(courseId.current.value);\r\n    //     props.giftCourse(data,userID.current.value);\r\n    //   setMsg('Course has been gifted')\r\n    //   setAlertCss(\"success\")\r\n    //   setTimeout(()=>{\r\n    //     setMsg(\"\")\r\n    //     userID.current.value=\"\"\r\n    //     courseId.current.value=\"\"\r\n    //     setError(\"\");\r\n    //   },3000)\r\n    \r\n    // } catch {\r\n    //   setError(\"Failed to Gift Course\");\r\n    // }\r\n    setLoading(false);\r\n  }\r\n//   async function fetchData  (id) {\r\n//       axios.get(`/CourseData/${id}.json`)\r\n//       .then((res)=>{\r\n//           console.log(res.data);\r\n//           setData(res.data)\r\n//       })\r\n//       .catch((error)=>{\r\n//           setError(error)\r\n//       })\r\n//   }\r\n    return (\r\n      <div>\r\n        <div className=\"Admin\">\r\n          <div className=\"title\">\r\n            <h2>\r\n              <strong className=\"white\">Admin</strong>\r\n            </h2>\r\n            <hr className=\"line\" />\r\n          </div>\r\n          {msg &&  <div className={alertCss}>{msg}</div>}\r\n          {error && <div className={alertCss}>{error}</div>}\r\n          <div className=\"form-details\">\r\n          <form>\r\n            <div className=\"container\">\r\n              <label className=\"container-label\">\r\n                <img src=\"../img/user.png\" alt=\"first name\" />\r\n              </label>\r\n              <input\r\n              ref={userID}\r\n                required\r\n                type=\"text\"\r\n                className=\"container-input\"\r\n                placeholder=\"Enter User Id\"\r\n              />\r\n              </div>\r\n              <div>\r\n              <label className=\"container-label\">\r\n                <img src=\"../img/course.png\" alt=\"first name\" />\r\n              </label>\r\n              <input\r\n              ref={courseId}\r\n                required\r\n                type=\"text\"\r\n                className=\"container-input\"\r\n                placeholder=\"Enter Course Id\"\r\n              />\r\n            </div>\r\n            <div className=\"container\">\r\n            <button disabled={loading} className=\"gift-btn\" onClick={handleSubmit} >\r\n                Gift Course\r\n              </button>\r\n              \r\n            </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  \r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n\r\n    };\r\n  };\r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        giftCourse:(data,id)=>dispatch(actions.giftCourse(data,id))\r\n    };\r\n  };\r\n  export default connect(mapStateToProps, mapDispatchToProps)(Admin);\r\n  ","D:\\FinalYearProject\\updated_project_4\\E-Learning-platform\\src\\store\\actions\\adminActions.js",["262","263"],{"ruleId":"264","severity":1,"message":"265","line":8,"column":40,"nodeType":"266","messageId":"267","endLine":8,"endColumn":47},{"ruleId":"268","replacedBy":"269"},{"ruleId":"270","replacedBy":"271"},{"ruleId":"264","severity":1,"message":"272","line":1,"column":17,"nodeType":"266","messageId":"267","endLine":1,"endColumn":26},{"ruleId":"264","severity":1,"message":"273","line":23,"column":11,"nodeType":"266","messageId":"267","endLine":23,"endColumn":18},{"ruleId":"264","severity":1,"message":"274","line":34,"column":10,"nodeType":"266","messageId":"267","endLine":34,"endColumn":23},{"ruleId":"264","severity":1,"message":"275","line":34,"column":25,"nodeType":"266","messageId":"267","endLine":34,"endColumn":41},{"ruleId":"276","severity":1,"message":"277","line":72,"column":31,"nodeType":"278","messageId":"279","endLine":72,"endColumn":33},{"ruleId":"264","severity":1,"message":"280","line":1,"column":17,"nodeType":"266","messageId":"267","endLine":1,"endColumn":26},{"ruleId":"264","severity":1,"message":"281","line":2,"column":10,"nodeType":"266","messageId":"267","endLine":2,"endColumn":14},{"ruleId":"282","severity":1,"message":"283","line":19,"column":6,"nodeType":"284","endLine":19,"endColumn":8,"suggestions":"285"},{"ruleId":"264","severity":1,"message":"286","line":20,"column":7,"nodeType":"266","messageId":"267","endLine":20,"endColumn":22},{"ruleId":"264","severity":1,"message":"287","line":10,"column":24,"nodeType":"266","messageId":"267","endLine":10,"endColumn":39},{"ruleId":"264","severity":1,"message":"288","line":13,"column":10,"nodeType":"266","messageId":"267","endLine":13,"endColumn":15},{"ruleId":"264","severity":1,"message":"289","line":13,"column":17,"nodeType":"266","messageId":"267","endLine":13,"endColumn":25},{"ruleId":"282","severity":1,"message":"290","line":26,"column":6,"nodeType":"284","endLine":26,"endColumn":8,"suggestions":"291"},{"ruleId":"276","severity":1,"message":"292","line":125,"column":44,"nodeType":"278","messageId":"293","endLine":125,"endColumn":46},{"ruleId":"264","severity":1,"message":"294","line":15,"column":10,"nodeType":"266","messageId":"267","endLine":15,"endColumn":16},{"ruleId":"264","severity":1,"message":"295","line":17,"column":10,"nodeType":"266","messageId":"267","endLine":17,"endColumn":17},{"ruleId":"264","severity":1,"message":"296","line":17,"column":19,"nodeType":"266","messageId":"267","endLine":17,"endColumn":29},{"ruleId":"264","severity":1,"message":"297","line":22,"column":10,"nodeType":"266","messageId":"267","endLine":22,"endColumn":20},{"ruleId":"282","severity":1,"message":"298","line":51,"column":6,"nodeType":"284","endLine":51,"endColumn":8,"suggestions":"299"},{"ruleId":"282","severity":1,"message":"300","line":58,"column":6,"nodeType":"284","endLine":58,"endColumn":24,"suggestions":"301"},{"ruleId":"276","severity":1,"message":"277","line":62,"column":34,"nodeType":"278","messageId":"279","endLine":62,"endColumn":36},{"ruleId":"264","severity":1,"message":"302","line":179,"column":9,"nodeType":"266","messageId":"267","endLine":179,"endColumn":26},{"ruleId":"264","severity":1,"message":"303","line":431,"column":9,"nodeType":"266","messageId":"267","endLine":431,"endColumn":18},{"ruleId":"264","severity":1,"message":"304","line":3,"column":10,"nodeType":"266","messageId":"267","endLine":3,"endColumn":18},{"ruleId":"264","severity":1,"message":"305","line":10,"column":20,"nodeType":"266","messageId":"267","endLine":10,"endColumn":31},{"ruleId":"282","severity":1,"message":"306","line":50,"column":6,"nodeType":"284","endLine":50,"endColumn":8,"suggestions":"307"},{"ruleId":"264","severity":1,"message":"280","line":1,"column":17,"nodeType":"266","messageId":"267","endLine":1,"endColumn":26},{"ruleId":"264","severity":1,"message":"304","line":3,"column":19,"nodeType":"266","messageId":"267","endLine":3,"endColumn":27},{"ruleId":"264","severity":1,"message":"308","line":4,"column":8,"nodeType":"266","messageId":"267","endLine":4,"endColumn":13},{"ruleId":"264","severity":1,"message":"305","line":15,"column":20,"nodeType":"266","messageId":"267","endLine":15,"endColumn":31},{"ruleId":"282","severity":1,"message":"306","line":28,"column":6,"nodeType":"284","endLine":28,"endColumn":8,"suggestions":"309"},{"ruleId":"264","severity":1,"message":"280","line":1,"column":17,"nodeType":"266","messageId":"267","endLine":1,"endColumn":26},{"ruleId":"264","severity":1,"message":"304","line":3,"column":19,"nodeType":"266","messageId":"267","endLine":3,"endColumn":27},{"ruleId":"264","severity":1,"message":"308","line":4,"column":8,"nodeType":"266","messageId":"267","endLine":4,"endColumn":13},{"ruleId":"264","severity":1,"message":"272","line":1,"column":34,"nodeType":"266","messageId":"267","endLine":1,"endColumn":43},{"ruleId":"264","severity":1,"message":"310","line":5,"column":10,"nodeType":"266","messageId":"267","endLine":5,"endColumn":19},{"ruleId":"264","severity":1,"message":"308","line":7,"column":8,"nodeType":"266","messageId":"267","endLine":7,"endColumn":13},{"ruleId":"264","severity":1,"message":"305","line":9,"column":20,"nodeType":"266","messageId":"267","endLine":9,"endColumn":31},{"ruleId":"264","severity":1,"message":"311","line":14,"column":17,"nodeType":"266","messageId":"267","endLine":14,"endColumn":28},{"ruleId":"264","severity":1,"message":"272","line":1,"column":17,"nodeType":"266","messageId":"267","endLine":1,"endColumn":26},{"ruleId":"264","severity":1,"message":"312","line":6,"column":10,"nodeType":"266","messageId":"267","endLine":6,"endColumn":24},{"ruleId":"264","severity":1,"message":"313","line":6,"column":26,"nodeType":"266","messageId":"267","endLine":6,"endColumn":43},{"ruleId":"264","severity":1,"message":"314","line":7,"column":22,"nodeType":"266","messageId":"267","endLine":7,"endColumn":35},{"ruleId":"264","severity":1,"message":"315","line":8,"column":10,"nodeType":"266","messageId":"267","endLine":8,"endColumn":16},{"ruleId":"264","severity":1,"message":"316","line":8,"column":17,"nodeType":"266","messageId":"267","endLine":8,"endColumn":26},{"ruleId":"264","severity":1,"message":"317","line":9,"column":10,"nodeType":"266","messageId":"267","endLine":9,"endColumn":16},{"ruleId":"264","severity":1,"message":"318","line":9,"column":17,"nodeType":"266","messageId":"267","endLine":9,"endColumn":26},{"ruleId":"264","severity":1,"message":"319","line":10,"column":10,"nodeType":"266","messageId":"267","endLine":10,"endColumn":14},{"ruleId":"264","severity":1,"message":"272","line":1,"column":28,"nodeType":"266","messageId":"267","endLine":1,"endColumn":37},{"ruleId":"264","severity":1,"message":"320","line":3,"column":8,"nodeType":"266","messageId":"267","endLine":3,"endColumn":12},{"ruleId":"264","severity":1,"message":"321","line":61,"column":11,"nodeType":"266","messageId":"267","endLine":61,"endColumn":14},{"ruleId":"264","severity":1,"message":"281","line":3,"column":10,"nodeType":"266","messageId":"267","endLine":3,"endColumn":14},{"ruleId":"264","severity":1,"message":"281","line":3,"column":10,"nodeType":"266","messageId":"267","endLine":3,"endColumn":14},{"ruleId":"264","severity":1,"message":"273","line":7,"column":10,"nodeType":"266","messageId":"267","endLine":7,"endColumn":17},{"ruleId":"282","severity":1,"message":"322","line":9,"column":6,"nodeType":"284","endLine":9,"endColumn":8,"suggestions":"323"},{"ruleId":"264","severity":1,"message":"324","line":3,"column":13,"nodeType":"266","messageId":"267","endLine":3,"endColumn":20},{"ruleId":"282","severity":1,"message":"325","line":9,"column":6,"nodeType":"284","endLine":9,"endColumn":8,"suggestions":"326"},{"ruleId":"282","severity":1,"message":"327","line":21,"column":6,"nodeType":"284","endLine":21,"endColumn":8,"suggestions":"328"},{"ruleId":"264","severity":1,"message":"281","line":2,"column":10,"nodeType":"266","messageId":"267","endLine":2,"endColumn":14},{"ruleId":"264","severity":1,"message":"329","line":1,"column":28,"nodeType":"266","messageId":"267","endLine":1,"endColumn":36},{"ruleId":"282","severity":1,"message":"330","line":9,"column":8,"nodeType":"284","endLine":9,"endColumn":10,"suggestions":"331"},{"ruleId":"282","severity":1,"message":"332","line":23,"column":6,"nodeType":"284","endLine":23,"endColumn":8,"suggestions":"333"},{"ruleId":"282","severity":1,"message":"332","line":19,"column":6,"nodeType":"284","endLine":19,"endColumn":8,"suggestions":"334"},{"ruleId":"282","severity":1,"message":"332","line":26,"column":6,"nodeType":"284","endLine":26,"endColumn":8,"suggestions":"335"},{"ruleId":"264","severity":1,"message":"308","line":2,"column":8,"nodeType":"266","messageId":"267","endLine":2,"endColumn":13},{"ruleId":"264","severity":1,"message":"336","line":4,"column":13,"nodeType":"266","messageId":"267","endLine":4,"endColumn":23},{"ruleId":"276","severity":1,"message":"277","line":177,"column":37,"nodeType":"278","messageId":"279","endLine":177,"endColumn":39},{"ruleId":"276","severity":1,"message":"277","line":196,"column":40,"nodeType":"278","messageId":"279","endLine":196,"endColumn":42},{"ruleId":"276","severity":1,"message":"277","line":204,"column":35,"nodeType":"278","messageId":"279","endLine":204,"endColumn":37},{"ruleId":"276","severity":1,"message":"277","line":355,"column":39,"nodeType":"278","messageId":"279","endLine":355,"endColumn":41},{"ruleId":"276","severity":1,"message":"277","line":373,"column":20,"nodeType":"278","messageId":"279","endLine":373,"endColumn":22},{"ruleId":"264","severity":1,"message":"337","line":3,"column":16,"nodeType":"266","messageId":"267","endLine":3,"endColumn":21},{"ruleId":"264","severity":1,"message":"304","line":4,"column":10,"nodeType":"266","messageId":"267","endLine":4,"endColumn":18},{"ruleId":"264","severity":1,"message":"338","line":8,"column":10,"nodeType":"266","messageId":"267","endLine":8,"endColumn":14},{"ruleId":"264","severity":1,"message":"339","line":8,"column":15,"nodeType":"266","messageId":"267","endLine":8,"endColumn":22},{"ruleId":"264","severity":1,"message":"340","line":14,"column":9,"nodeType":"266","messageId":"267","endLine":14,"endColumn":16},{"ruleId":"264","severity":1,"message":"341","line":1,"column":13,"nodeType":"266","messageId":"267","endLine":1,"endColumn":24},{"ruleId":"264","severity":1,"message":"308","line":2,"column":8,"nodeType":"266","messageId":"267","endLine":2,"endColumn":13},"no-unused-vars","'compose' is defined but never used.","Identifier","unusedVar","no-native-reassign",["342"],"no-negated-in-lhs",["343"],"'useEffect' is defined but never used.","'useAuth' is defined but never used.","'notifyDisplay' is assigned a value but never used.","'setNotifyDisplay' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Component' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.notificationItems.length', 'props.notificationState', and 'props.wishlist.length'. Either include them or remove the dependency array.","ArrayExpression",["344"],"'autoChangeColor' is assigned a value but never used.","'setDisplayStyle' is assigned a value but never used.","'check' is assigned a value but never used.","'setCheck' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser.uid' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["345"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'status' is assigned a value but never used.","'newComp' is assigned a value but never used.","'setNewComp' is assigned a value but never used.","'finalPrice' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser', 'getCategorisedData', 'props', and 'redirectData'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["346"],"React Hook useEffect has a missing dependency: 'props.mainDataSource'. Either include it or remove the dependency array. If 'setMaindataSource' needs the current value of 'props.mainDataSource', you can also switch to useReducer instead of useState and read 'props.mainDataSource' in the reducer.",["347"],"'courseDescription' is assigned a value but never used.","'resetData' is assigned a value but never used.","'Redirect' is defined but never used.","'setAlertCss' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["348"],"'axios' is defined but never used.",["349"],"'ADD_PRICE' is defined but never used.","'currentUser' is assigned a value but never used.","'mainDataSource' is assigned a value but never used.","'setMaindataSource' is assigned a value but never used.","'setDataSource' is assigned a value but never used.","'imgcss' is assigned a value but never used.","'setImgcss' is assigned a value but never used.","'regcss' is assigned a value but never used.","'setRegcss' is assigned a value but never used.","'test' is assigned a value but never used.","'data' is defined but never used.","'obj' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["350"],"'actions' is defined but never used.","React Hook useEffect has a missing dependency: 'props.fetchedOrder'. Either include it or remove the dependency array.",["351"],"React Hook useEffect has a missing dependency: 'props.wishlistData'. Either include it or remove the dependency array.",["352"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'props.title' and 'props.url'. Either include them or remove the dependency array.",["353"],"React Hook useEffect has a missing dependency: 'notify'. Either include it or remove the dependency array.",["354"],["355"],["356"],"'storageRef' is defined but never used.","'color' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'history' is assigned a value but never used.","'actionTypes' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"365","fix":"367"},{"desc":"368","fix":"369"},{"desc":"370","fix":"371"},{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"desc":"376","fix":"378"},{"desc":"376","fix":"379"},"Update the dependencies array to be: [props.notificationItems.length, props.notificationState, props.wishlist.length]",{"range":"380","text":"381"},"Update the dependencies array to be: [currentUser.uid, props]",{"range":"382","text":"383"},"Update the dependencies array to be: [currentUser, getCategorisedData, props, redirectData]",{"range":"384","text":"385"},"Update the dependencies array to be: [props.dataSource, props.mainDataSource]",{"range":"386","text":"387"},"Update the dependencies array to be: [currentUser, props]",{"range":"388","text":"389"},{"range":"390","text":"389"},"Update the dependencies array to be: [props]",{"range":"391","text":"392"},"Update the dependencies array to be: [props.fetchedOrder]",{"range":"393","text":"394"},"Update the dependencies array to be: [props.wishlistData]",{"range":"395","text":"396"},"Update the dependencies array to be: [props.title, props.url]",{"range":"397","text":"398"},"Update the dependencies array to be: [notify]",{"range":"399","text":"400"},{"range":"401","text":"400"},{"range":"402","text":"400"},[696,698],"[props.notificationItems.length, props.notificationState, props.wishlist.length]",[960,962],"[currentUser.uid, props]",[2138,2140],"[currentUser, getCategorisedData, props, redirectData]",[2335,2353],"[props.dataSource, props.mainDataSource]",[1565,1567],"[currentUser, props]",[1077,1079],[299,301],"[props]",[308,310],"[props.fetchedOrder]",[714,716],"[props.wishlistData]",[273,275],"[props.title, props.url]",[661,663],"[notify]",[482,484],[641,643]]